// auto-generated by schema_gen

#include <stddef.h>
#include <stdint.h>

#define se_flags(x) (*(uint32_t *)x)
#define se_exists(x, f) (se_flags (x) & SE_##f##_exists)
#define se_clear(x, f) (se_flags (x) &= ~SE_##f##_exists)
#define se_set(x, f) (se_flags (x) |= SE_##f##_exists)
#define se_true(x, f) (se_flags (x) & SE_##f##_true)
#define se_set_true(x, f) (se_flags (x) |= SE_##f##_true)
#define se_set_false(x, f) (se_flags (x) &= ~SE_##f##_true)

// global flags
#define SE_description_exists (1 << 0)

typedef uint64_t SE_UInt48_t;
typedef uint8_t SE_UInt8_t;
typedef SE_UInt8_t SE_PhaseCode_t;
typedef SE_UInt8_t SE_KindType_t;
typedef uint32_t SE_UInt32_t;
typedef SE_UInt8_t SE_FlowDirectionType_t;
typedef SE_UInt8_t SE_DataQualifierType_t;
typedef SE_UInt8_t SE_CommodityType_t;
typedef int32_t SE_Int32_t;
typedef SE_UInt8_t SE_UomType_t;
typedef int8_t SE_Int8_t;
typedef SE_Int8_t SE_PowerOfTenMultiplierType_t;

typedef struct {
  SE_PowerOfTenMultiplierType_t multiplier;
  SE_UomType_t unit;
  SE_Int32_t value;
} SE_UnitValueType_t;

typedef SE_UInt8_t SE_AccumulationBehaviourType_t;

// #define SE_description_exists (1 << 0)
#define SE_subscribable_exists (1 << 1)
#define SE_version_exists (1 << 2)
#define SE_deviceCategory_exists (1 << 3)
#define SE_lFDI_exists (1 << 4)
#define SE_TimeLink_exists (1 << 5)
typedef struct {
  uint32_t _flags;
  char * href;
} SE_Resource_t;

#define SE_accumulationBehaviour_exists (1 << 0)
#define SE_calorificValue_exists (1 << 1)
#define SE_commodity_exists (1 << 2)
#define SE_conversionFactor_exists (1 << 3)
#define SE_dataQualifier_exists (1 << 4)
#define SE_flowDirection_exists (1 << 5)
#define SE_intervalLength_exists (1 << 6)
#define SE_maxNumberOfIntervals_exists (1 << 7)
#define SE_numberOfConsumptionBlocks_exists (1 << 8)
#define SE_numberOfTouTiers_exists (1 << 9)
#define SE_phase_exists (1 << 10)
#define SE_powerOfTenMultiplier_exists (1 << 11)
#define SE_subIntervalLength_exists (1 << 12)
#define SE_supplyLimit_exists (1 << 13)
#define SE_tieredConsumptionBlocks_true (1 << 14)
#define SE_tieredConsumptionBlocks_exists (1 << 15)
#define SE_uom_exists (1 << 16)
#define SE_kind_exists (1 << 17)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_AccumulationBehaviourType_t accumulationBehaviour;
  SE_UnitValueType_t calorificValue;
  SE_CommodityType_t commodity;
  SE_UnitValueType_t conversionFactor;
  SE_DataQualifierType_t dataQualifier;
  SE_FlowDirectionType_t flowDirection;
  SE_UInt32_t intervalLength;
  SE_KindType_t kind;
  SE_UInt8_t maxNumberOfIntervals;
  SE_UInt8_t numberOfConsumptionBlocks;
  SE_UInt8_t numberOfTouTiers;
  SE_PhaseCode_t phase;
  SE_PowerOfTenMultiplierType_t powerOfTenMultiplier;
  SE_UInt32_t subIntervalLength;
  SE_UInt48_t supplyLimit;
  SE_UomType_t uom;
} SE_ReadingType_t;

typedef SE_UInt8_t SE_SubscribableType_t;
typedef int64_t SE_Int48_t;
typedef SE_UInt8_t SE_TOUType_t;
typedef int64_t SE_Int64_t;
typedef SE_Int64_t SE_TimeType_t;

typedef struct {
  SE_UInt32_t duration;
  SE_TimeType_t start;
} SE_DateTimeInterval_t;

typedef uint8_t SE_HexBinary16_t[2];
typedef SE_UInt8_t SE_ConsumptionBlockType_t;

// #define SE_subscribable_exists (1 << 1)
#define SE_consumptionBlock_exists (1 << 2)
#define SE_qualityFlags_exists (1 << 3)
#define SE_timePeriod_exists (1 << 4)
#define SE_touTier_exists (1 << 5)
#define SE_value_exists (1 << 6)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_ConsumptionBlockType_t consumptionBlock;
  SE_HexBinary16_t qualityFlags;
  SE_DateTimeInterval_t timePeriod;
  SE_TOUType_t touTier;
  SE_Int48_t value;
} SE_ReadingBase_t;

// #define SE_subscribable_exists (1 << 1)
// #define SE_consumptionBlock_exists (1 << 2)
// #define SE_qualityFlags_exists (1 << 3)
// #define SE_timePeriod_exists (1 << 4)
// #define SE_touTier_exists (1 << 5)
// #define SE_value_exists (1 << 6)
#define SE_localID_exists (1 << 7)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_ConsumptionBlockType_t consumptionBlock;
  SE_HexBinary16_t qualityFlags;
  SE_DateTimeInterval_t timePeriod;
  SE_TOUType_t touTier;
  SE_Int48_t value;
  SE_SubscribableType_t subscribable;
  SE_HexBinary16_t localID;
} SE_Reading_t;

typedef uint16_t SE_UInt16_t;
typedef SE_UInt16_t SE_VersionType_t;
typedef char SE_String32_t[32];
typedef uint8_t SE_HexBinary128_t[16];
typedef SE_HexBinary128_t SE_mRIDType_t;

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
} SE_IdentifiedObject_t;

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_DateTimeInterval_t timePeriod;
} SE_ReadingSetBase_t;

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_DateTimeInterval_t timePeriod;
  List *Reading;
} SE_MirrorReadingSet_t;

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
} SE_MeterReadingBase_t;

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
#define SE_lastUpdateTime_exists (1 << 3)
#define SE_nextUpdateTime_exists (1 << 4)
#define SE_Reading_exists (1 << 5)
#define SE_ReadingType_exists (1 << 6)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_TimeType_t lastUpdateTime;
  List *MirrorReadingSet;
  SE_TimeType_t nextUpdateTime;
  SE_Reading_t Reading;
  SE_ReadingType_t ReadingType;
} SE_MirrorMeterReading_t;

typedef uint8_t SE_HexBinary160_t[20];
typedef SE_UInt8_t SE_ServiceKind_t;
typedef SE_HexBinary16_t SE_RoleFlagsType_t;

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_RoleFlagsType_t roleFlags;
  SE_ServiceKind_t serviceCategoryKind;
  SE_UInt8_t status;
} SE_UsagePointBase_t;

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
#define SE_postRate_exists (1 << 21)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_RoleFlagsType_t roleFlags;
  SE_ServiceKind_t serviceCategoryKind;
  SE_UInt8_t status;
  SE_HexBinary160_t deviceLFDI;
  List *MirrorMeterReading;
  SE_UInt32_t postRate;
} SE_MirrorUsagePoint_t;

typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
} SE_List_t;

#define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  SE_UInt32_t pollRate;
  List *MirrorUsagePoint;
} SE_MirrorUsagePointList_t;

typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *MirrorMeterReading;
} SE_MirrorMeterReadingList_t;

typedef uint64_t SE_UInt64_t;
typedef uint8_t SE_HexBinary48_t[6];

#define SE_maxRetryDuration_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  SE_UInt16_t maxRetryDuration;
  SE_UInt16_t reasonCode;
} SE_Error_t;

typedef uint8_t SE_HexBinary8_t;

// #define SE_description_exists (1 << 0)
// #define SE_subscribable_exists (1 << 1)
// #define SE_version_exists (1 << 2)
// #define SE_deviceCategory_exists (1 << 3)
#define SE_responseRequired_exists (1 << 4)
typedef struct {
  uint32_t _flags;
  char * href;
  char * replyTo;
  SE_HexBinary8_t responseRequired;
} SE_RespondableResource_t;

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
// #define SE_responseRequired_exists (1 << 4)
typedef struct {
  uint32_t _flags;
  char * href;
  char * replyTo;
  SE_HexBinary8_t responseRequired;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
} SE_RespondableIdentifiedObject_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_Link_t;

#define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_ListLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_NotificationListLink_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_MeterReadingLink_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_EndDeviceLink_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_DeviceCapabilityLink_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_DERProgramLink_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_DERLink_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_CustomerAccountLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_ActiveFlowReservationListLink_t;

typedef struct {
  SE_PowerOfTenMultiplierType_t multiplier;
  SE_UInt16_t value;
} SE_UnsignedFixedPointType_t;

typedef int16_t SE_Int16_t;

typedef struct {
  SE_PowerOfTenMultiplierType_t multiplier;
  SE_Int16_t value;
} SE_FixedPointType_t;

typedef struct {
  SE_TimeType_t dateTime;
  SE_UInt8_t value;
} SE_StorageModeStatusType_t;

typedef SE_UInt16_t SE_PerCent_t;

typedef struct {
  SE_TimeType_t dateTime;
  SE_PerCent_t value;
} SE_StateOfChargeStatusType_t;

typedef struct {
  SE_TimeType_t dateTime;
  SE_UInt8_t value;
} SE_OperationalModeStatusType_t;

typedef char SE_String6_t[6];

typedef struct {
  SE_TimeType_t dateTime;
  SE_String6_t value;
} SE_ManufacturerStatusType_t;

typedef struct {
  SE_TimeType_t dateTime;
  SE_UInt8_t value;
} SE_LocalControlModeStatusType_t;

typedef struct {
  SE_TimeType_t dateTime;
  SE_UInt8_t value;
} SE_InverterStatusType_t;

typedef struct {
  SE_TimeType_t dateTime;
  SE_HexBinary8_t value;
} SE_ConnectStatusType_t;

typedef uint8_t SE_HexBinary32_t[4];

// #define SE_description_exists (1 << 0)
// #define SE_subscribable_exists (1 << 1)
// #define SE_version_exists (1 << 2)
// #define SE_deviceCategory_exists (1 << 3)
// #define SE_lFDI_exists (1 << 4)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
} SE_SubscribableResource_t;

// #define SE_subscribable_exists (1 << 1)
#define SE_alarmStatus_exists (1 << 2)
#define SE_genConnectStatus_exists (1 << 3)
#define SE_inverterStatus_exists (1 << 4)
#define SE_localControlModeStatus_exists (1 << 5)
#define SE_manufacturerStatus_exists (1 << 6)
#define SE_operationalModeStatus_exists (1 << 7)
#define SE_stateOfChargeStatus_exists (1 << 8)
#define SE_storageModeStatus_exists (1 << 9)
#define SE_storConnectStatus_exists (1 << 10)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_HexBinary32_t alarmStatus;
  SE_ConnectStatusType_t genConnectStatus;
  SE_InverterStatusType_t inverterStatus;
  SE_LocalControlModeStatusType_t localControlModeStatus;
  SE_ManufacturerStatusType_t manufacturerStatus;
  SE_OperationalModeStatusType_t operationalModeStatus;
  SE_TimeType_t readingTime;
  SE_StateOfChargeStatusType_t stateOfChargeStatus;
  SE_StorageModeStatusType_t storageModeStatus;
  SE_ConnectStatusType_t storConnectStatus;
} SE_DERStatus_t;

typedef SE_UInt8_t SE_PrimacyType_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_DERCurveListLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_DERControlListLink_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_DefaultDERControlLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_ActiveDERControlListLink_t;

// #define SE_description_exists (1 << 0)
// #define SE_subscribable_exists (1 << 1)
// #define SE_version_exists (1 << 2)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
} SE_SubscribableIdentifiedObject_t;

// #define SE_description_exists (1 << 0)
// #define SE_subscribable_exists (1 << 1)
// #define SE_version_exists (1 << 2)
#define SE_ActiveDERControlListLink_exists (1 << 3)
#define SE_DefaultDERControlLink_exists (1 << 4)
#define SE_DERControlListLink_exists (1 << 5)
#define SE_DERCurveListLink_exists (1 << 6)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_ActiveDERControlListLink_t ActiveDERControlListLink;
  SE_DefaultDERControlLink_t DefaultDERControlLink;
  SE_DERControlListLink_t DERControlListLink;
  SE_DERCurveListLink_t DERCurveListLink;
  SE_PrimacyType_t primacy;
} SE_DERProgram_t;

// #define SE_subscribable_exists (1 << 1)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_UInt32_t all;
  SE_UInt32_t results;
} SE_SubscribableList_t;

// #define SE_subscribable_exists (1 << 1)
// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_UInt32_t all;
  SE_UInt32_t results;
  SE_UInt32_t pollRate;
  List *DERProgram;
} SE_DERProgramList_t;

typedef SE_UInt8_t SE_DERUnitRefType_t;
typedef SE_UInt8_t SE_DERCurveType_t;

#define SE_excitation_true (1 << 0)
#define SE_excitation_exists (1 << 1)
typedef struct {
  uint32_t _flags;
  SE_Int32_t xvalue;
  SE_Int32_t yvalue;
} SE_CurveData_t;

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
#define SE_autonomousVRefEnable_true (1 << 3)
#define SE_autonomousVRefEnable_exists (1 << 4)
#define SE_autonomousVRefTimeConstant_exists (1 << 5)
#define SE_CurveData_count(x) (((se_flags (x) >> 6) & 0xf) + 1)
#define SE_set_CurveData_count(x, n) (se_flags(x) |= (((n) - 1) & 0xf) << 6)
#define SE_openLoopTms_exists (1 << 10)
#define SE_rampDecTms_exists (1 << 11)
#define SE_rampIncTms_exists (1 << 12)
#define SE_rampPT1Tms_exists (1 << 13)
#define SE_vRef_exists (1 << 14)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_UInt32_t autonomousVRefTimeConstant;
  SE_TimeType_t creationTime;
  SE_CurveData_t CurveData[10];
  SE_DERCurveType_t curveType;
  SE_UInt16_t openLoopTms;
  SE_UInt16_t rampDecTms;
  SE_UInt16_t rampIncTms;
  SE_UInt16_t rampPT1Tms;
  SE_PerCent_t vRef;
  SE_PowerOfTenMultiplierType_t xMultiplier;
  SE_PowerOfTenMultiplierType_t yMultiplier;
  SE_DERUnitRefType_t yRefType;
} SE_DERCurve_t;

typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *DERCurve;
} SE_DERCurveList_t;

typedef SE_HexBinary32_t SE_DeviceCategoryType_t;

typedef struct {
  SE_PowerOfTenMultiplierType_t multiplier;
  SE_Int16_t value;
} SE_ActivePower_t;

typedef struct {
  SE_PowerOfTenMultiplierType_t multiplier;
  SE_Int16_t value;
} SE_ReactivePower_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_DERCurveLink_t;

typedef struct {
  SE_UInt32_t dBOF;
  SE_UInt32_t dBUF;
  SE_UInt16_t kOF;
  SE_UInt16_t kUF;
  SE_UInt16_t openLoopTms;
} SE_FreqDroopType_t;

typedef SE_Int16_t SE_SignedPerCent_t;

typedef struct {
  SE_DERUnitRefType_t refType;
  SE_SignedPerCent_t value;
} SE_FixedVar_t;

#define SE_excitation0_true (1 << 0)
typedef struct {
  uint32_t _flags;
  SE_UInt16_t displacement;
  SE_PowerOfTenMultiplierType_t multiplier;
} SE_PowerFactorWithExcitation_t;

#define SE_opModConnect_true (1 << 0)
#define SE_opModConnect_exists (1 << 1)
#define SE_opModEnergize_true (1 << 2)
#define SE_opModEnergize_exists (1 << 3)
#define SE_opModFixedPFAbsorbW_exists (1 << 4)
#define SE_opModFixedPFInjectW_exists (1 << 5)
#define SE_opModFixedVar_exists (1 << 6)
#define SE_opModFixedW_exists (1 << 7)
#define SE_opModFreqDroop_exists (1 << 8)
#define SE_opModFreqWatt_exists (1 << 9)
#define SE_opModHFRTMayTrip_exists (1 << 10)
#define SE_opModHFRTMustTrip_exists (1 << 11)
#define SE_opModHVRTMayTrip_exists (1 << 12)
#define SE_opModHVRTMomentaryCessation_exists (1 << 13)
#define SE_opModHVRTMustTrip_exists (1 << 14)
#define SE_opModLFRTMayTrip_exists (1 << 15)
#define SE_opModLFRTMustTrip_exists (1 << 16)
#define SE_opModLVRTMayTrip_exists (1 << 17)
#define SE_opModLVRTMomentaryCessation_exists (1 << 18)
#define SE_opModLVRTMustTrip_exists (1 << 19)
#define SE_opModMaxLimW_exists (1 << 20)
#define SE_opModTargetVar_exists (1 << 21)
#define SE_opModTargetW_exists (1 << 22)
#define SE_opModVoltVar_exists (1 << 23)
#define SE_opModVoltWatt_exists (1 << 24)
#define SE_opModWattPF_exists (1 << 25)
#define SE_opModWattVar_exists (1 << 26)
#define SE_rampTms_exists (1 << 27)
typedef struct {
  uint32_t _flags;
  SE_PowerFactorWithExcitation_t opModFixedPFAbsorbW;
  SE_PowerFactorWithExcitation_t opModFixedPFInjectW;
  SE_FixedVar_t opModFixedVar;
  SE_SignedPerCent_t opModFixedW;
  SE_FreqDroopType_t opModFreqDroop;
  SE_DERCurveLink_t opModFreqWatt;
  SE_DERCurveLink_t opModHFRTMayTrip;
  SE_DERCurveLink_t opModHFRTMustTrip;
  SE_DERCurveLink_t opModHVRTMayTrip;
  SE_DERCurveLink_t opModHVRTMomentaryCessation;
  SE_DERCurveLink_t opModHVRTMustTrip;
  SE_DERCurveLink_t opModLFRTMayTrip;
  SE_DERCurveLink_t opModLFRTMustTrip;
  SE_DERCurveLink_t opModLVRTMayTrip;
  SE_DERCurveLink_t opModLVRTMomentaryCessation;
  SE_DERCurveLink_t opModLVRTMustTrip;
  SE_PerCent_t opModMaxLimW;
  SE_ReactivePower_t opModTargetVar;
  SE_ActivePower_t opModTargetW;
  SE_DERCurveLink_t opModVoltVar;
  SE_DERCurveLink_t opModVoltWatt;
  SE_DERCurveLink_t opModWattPF;
  SE_DERCurveLink_t opModWattVar;
  SE_UInt16_t rampTms;
} SE_DERControlBase_t;

typedef SE_Int16_t SE_OneHourRangeType_t;
typedef char SE_String192_t[192];

#define SE_potentiallySuperseded_true (1 << 0)
#define SE_potentiallySupersededTime_exists (1 << 1)
#define SE_reason_exists (1 << 2)
typedef struct {
  uint32_t _flags;
  SE_UInt8_t currentStatus;
  SE_TimeType_t dateTime;
  SE_TimeType_t potentiallySupersededTime;
  SE_String192_t reason;
} SE_EventStatus_t;

// #define SE_description_exists (1 << 0)
// #define SE_subscribable_exists (1 << 1)
// #define SE_version_exists (1 << 2)
// #define SE_deviceCategory_exists (1 << 3)
// #define SE_responseRequired_exists (1 << 4)
typedef struct {
  uint32_t _flags;
  char * href;
  char * replyTo;
  SE_HexBinary8_t responseRequired;
  SE_SubscribableType_t subscribable;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
} SE_RespondableSubscribableIdentifiedObject_t;

// #define SE_description_exists (1 << 0)
// #define SE_subscribable_exists (1 << 1)
// #define SE_version_exists (1 << 2)
// #define SE_deviceCategory_exists (1 << 3)
// #define SE_responseRequired_exists (1 << 4)
typedef struct {
  uint32_t _flags;
  char * href;
  char * replyTo;
  SE_HexBinary8_t responseRequired;
  SE_SubscribableType_t subscribable;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_TimeType_t creationTime;
  SE_EventStatus_t EventStatus;
  SE_DateTimeInterval_t interval;
} SE_Event_t;

// #define SE_description_exists (1 << 0)
// #define SE_subscribable_exists (1 << 1)
// #define SE_version_exists (1 << 2)
// #define SE_deviceCategory_exists (1 << 3)
// #define SE_responseRequired_exists (1 << 4)
#define SE_randomizeDuration_exists (1 << 5)
#define SE_randomizeStart_exists (1 << 6)
typedef struct {
  uint32_t _flags;
  char * href;
  char * replyTo;
  SE_HexBinary8_t responseRequired;
  SE_SubscribableType_t subscribable;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_TimeType_t creationTime;
  SE_EventStatus_t EventStatus;
  SE_DateTimeInterval_t interval;
  SE_OneHourRangeType_t randomizeDuration;
  SE_OneHourRangeType_t randomizeStart;
} SE_RandomizableEvent_t;

// #define SE_description_exists (1 << 0)
// #define SE_subscribable_exists (1 << 1)
// #define SE_version_exists (1 << 2)
// #define SE_deviceCategory_exists (1 << 3)
// #define SE_responseRequired_exists (1 << 4)
// #define SE_randomizeDuration_exists (1 << 5)
// #define SE_randomizeStart_exists (1 << 6)
typedef struct {
  uint32_t _flags;
  char * href;
  char * replyTo;
  SE_HexBinary8_t responseRequired;
  SE_SubscribableType_t subscribable;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_TimeType_t creationTime;
  SE_EventStatus_t EventStatus;
  SE_DateTimeInterval_t interval;
  SE_OneHourRangeType_t randomizeDuration;
  SE_OneHourRangeType_t randomizeStart;
  SE_DERControlBase_t DERControlBase;
  SE_DeviceCategoryType_t deviceCategory;
} SE_DERControl_t;

// #define SE_subscribable_exists (1 << 1)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *DERControl;
} SE_DERControlList_t;

typedef SE_UInt8_t SE_DERType_t;

typedef struct {
  SE_PowerOfTenMultiplierType_t multiplier;
  SE_UInt16_t value;
} SE_ReactiveSusceptance_t;

typedef struct {
  SE_UInt16_t displacement;
  SE_PowerOfTenMultiplierType_t multiplier;
} SE_PowerFactor_t;

typedef struct {
  SE_PowerOfTenMultiplierType_t multiplier;
  SE_UInt16_t value;
} SE_WattHour_t;

typedef struct {
  SE_PowerOfTenMultiplierType_t multiplier;
  SE_UInt16_t value;
} SE_VoltageRMS_t;

typedef struct {
  SE_PowerOfTenMultiplierType_t multiplier;
  SE_UInt16_t value;
} SE_ApparentPower_t;

typedef struct {
  SE_PowerOfTenMultiplierType_t multiplier;
  SE_UInt16_t value;
} SE_AmpereHour_t;

typedef struct {
  SE_PowerOfTenMultiplierType_t multiplier;
  SE_UInt16_t value;
} SE_CurrentRMS_t;

typedef SE_HexBinary32_t SE_DERControlType_t;

#define SE_rtgAbnormalCategory_exists (1 << 0)
#define SE_rtgMaxA_exists (1 << 1)
#define SE_rtgMaxAh_exists (1 << 2)
#define SE_rtgMaxChargeRateVA_exists (1 << 3)
#define SE_rtgMaxChargeRateW_exists (1 << 4)
#define SE_rtgMaxDischargeRateVA_exists (1 << 5)
#define SE_rtgMaxDischargeRateW_exists (1 << 6)
#define SE_rtgMaxV_exists (1 << 7)
#define SE_rtgMaxVA_exists (1 << 8)
#define SE_rtgMaxVar_exists (1 << 9)
#define SE_rtgMaxVarNeg_exists (1 << 10)
#define SE_rtgMaxWh_exists (1 << 11)
#define SE_rtgMinPFOverExcited_exists (1 << 12)
#define SE_rtgMinPFUnderExcited_exists (1 << 13)
#define SE_rtgMinV_exists (1 << 14)
#define SE_rtgNormalCategory_exists (1 << 15)
#define SE_rtgOverExcitedPF_exists (1 << 16)
#define SE_rtgOverExcitedW_exists (1 << 17)
#define SE_rtgReactiveSusceptance_exists (1 << 18)
#define SE_rtgUnderExcitedPF_exists (1 << 19)
#define SE_rtgUnderExcitedW_exists (1 << 20)
#define SE_rtgVNom_exists (1 << 21)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_DERControlType_t modesSupported;
  SE_UInt8_t rtgAbnormalCategory;
  SE_CurrentRMS_t rtgMaxA;
  SE_AmpereHour_t rtgMaxAh;
  SE_ApparentPower_t rtgMaxChargeRateVA;
  SE_ActivePower_t rtgMaxChargeRateW;
  SE_ApparentPower_t rtgMaxDischargeRateVA;
  SE_ActivePower_t rtgMaxDischargeRateW;
  SE_VoltageRMS_t rtgMaxV;
  SE_ApparentPower_t rtgMaxVA;
  SE_ReactivePower_t rtgMaxVar;
  SE_ReactivePower_t rtgMaxVarNeg;
  SE_ActivePower_t rtgMaxW;
  SE_WattHour_t rtgMaxWh;
  SE_PowerFactor_t rtgMinPFOverExcited;
  SE_PowerFactor_t rtgMinPFUnderExcited;
  SE_VoltageRMS_t rtgMinV;
  SE_UInt8_t rtgNormalCategory;
  SE_PowerFactor_t rtgOverExcitedPF;
  SE_ActivePower_t rtgOverExcitedW;
  SE_ReactiveSusceptance_t rtgReactiveSusceptance;
  SE_PowerFactor_t rtgUnderExcitedPF;
  SE_ActivePower_t rtgUnderExcitedW;
  SE_VoltageRMS_t rtgVNom;
  SE_DERType_t type;
} SE_DERCapability_t;

// #define SE_subscribable_exists (1 << 1)
#define SE_maxChargeDuration_exists (1 << 2)
#define SE_reserveChargePercent_exists (1 << 3)
#define SE_reservePercent_exists (1 << 4)
#define SE_statVarAvail_exists (1 << 5)
#define SE_statWAvail_exists (1 << 6)
#define SE_availabilityDuration_exists (1 << 7)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_UInt32_t availabilityDuration;
  SE_UInt32_t maxChargeDuration;
  SE_TimeType_t readingTime;
  SE_PerCent_t reserveChargePercent;
  SE_PerCent_t reservePercent;
  SE_ReactivePower_t statVarAvail;
  SE_ActivePower_t statWAvail;
} SE_DERAvailability_t;

// #define SE_subscribable_exists (1 << 1)
#define SE_modesEnabled_exists (1 << 2)
#define SE_setMaxA_exists (1 << 3)
#define SE_setMaxAh_exists (1 << 4)
#define SE_setMaxChargeRateVA_exists (1 << 5)
#define SE_setMaxChargeRateW_exists (1 << 6)
#define SE_setMaxDischargeRateVA_exists (1 << 7)
#define SE_setMaxDischargeRateW_exists (1 << 8)
#define SE_setMaxV_exists (1 << 9)
#define SE_setMaxVA_exists (1 << 10)
#define SE_setMaxVar_exists (1 << 11)
#define SE_setMaxVarNeg_exists (1 << 12)
#define SE_setMaxWh_exists (1 << 13)
#define SE_setMinPFOverExcited_exists (1 << 14)
#define SE_setMinPFUnderExcited_exists (1 << 15)
#define SE_setMinV_exists (1 << 16)
#define SE_setVNom_exists (1 << 17)
#define SE_setVRef_exists (1 << 18)
#define SE_setVRefOfs_exists (1 << 19)
#define SE_setESDelay_exists (1 << 20)
#define SE_setESHighFreq_exists (1 << 21)
#define SE_setESHighVolt_exists (1 << 22)
#define SE_setESLowFreq_exists (1 << 23)
#define SE_setESLowVolt_exists (1 << 24)
#define SE_setESRampTms_exists (1 << 25)
#define SE_setESRandomDelay_exists (1 << 26)
#define SE_setSoftGradW_exists (1 << 27)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_DERControlType_t modesEnabled;
  SE_UInt32_t setESDelay;
  SE_UInt16_t setESHighFreq;
  SE_Int16_t setESHighVolt;
  SE_UInt16_t setESLowFreq;
  SE_Int16_t setESLowVolt;
  SE_UInt32_t setESRampTms;
  SE_UInt32_t setESRandomDelay;
  SE_UInt16_t setGradW;
  SE_CurrentRMS_t setMaxA;
  SE_AmpereHour_t setMaxAh;
  SE_ApparentPower_t setMaxChargeRateVA;
  SE_ActivePower_t setMaxChargeRateW;
  SE_ApparentPower_t setMaxDischargeRateVA;
  SE_ActivePower_t setMaxDischargeRateW;
  SE_VoltageRMS_t setMaxV;
  SE_ApparentPower_t setMaxVA;
  SE_ReactivePower_t setMaxVar;
  SE_ReactivePower_t setMaxVarNeg;
  SE_ActivePower_t setMaxW;
  SE_WattHour_t setMaxWh;
  SE_PowerFactor_t setMinPFOverExcited;
  SE_PowerFactor_t setMinPFUnderExcited;
  SE_VoltageRMS_t setMinV;
  SE_UInt16_t setSoftGradW;
  SE_VoltageRMS_t setVNom;
  SE_VoltageRMS_t setVRef;
  SE_VoltageRMS_t setVRefOfs;
  SE_TimeType_t updatedTime;
} SE_DERSettings_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_DERStatusLink_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_DERSettingsLink_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_DERCapabilityLink_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_DERAvailabilityLink_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_CurrentDERProgramLink_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_AssociatedUsagePointLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_AssociatedDERProgramListLink_t;

// #define SE_subscribable_exists (1 << 1)
#define SE_AssociatedDERProgramListLink_exists (1 << 2)
#define SE_AssociatedUsagePointLink_exists (1 << 3)
#define SE_CurrentDERProgramLink_exists (1 << 4)
#define SE_DERAvailabilityLink_exists (1 << 5)
#define SE_DERCapabilityLink_exists (1 << 6)
#define SE_DERSettingsLink_exists (1 << 7)
#define SE_DERStatusLink_exists (1 << 8)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_AssociatedDERProgramListLink_t AssociatedDERProgramListLink;
  SE_AssociatedUsagePointLink_t AssociatedUsagePointLink;
  SE_CurrentDERProgramLink_t CurrentDERProgramLink;
  SE_DERAvailabilityLink_t DERAvailabilityLink;
  SE_DERCapabilityLink_t DERCapabilityLink;
  SE_DERSettingsLink_t DERSettingsLink;
  SE_DERStatusLink_t DERStatusLink;
} SE_DER_t;

// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  SE_UInt32_t pollRate;
  List *DER;
} SE_DERList_t;

// #define SE_description_exists (1 << 0)
// #define SE_subscribable_exists (1 << 1)
// #define SE_version_exists (1 << 2)
#define SE_setGradW_exists (1 << 3)
// #define SE_setESDelay_exists (1 << 20)
// #define SE_setESHighFreq_exists (1 << 21)
// #define SE_setESHighVolt_exists (1 << 22)
// #define SE_setESLowFreq_exists (1 << 23)
// #define SE_setESLowVolt_exists (1 << 24)
// #define SE_setESRampTms_exists (1 << 25)
// #define SE_setESRandomDelay_exists (1 << 26)
// #define SE_setSoftGradW_exists (1 << 27)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_DERControlBase_t DERControlBase;
  SE_UInt32_t setESDelay;
  SE_UInt16_t setESHighFreq;
  SE_Int16_t setESHighVolt;
  SE_UInt16_t setESLowFreq;
  SE_Int16_t setESLowVolt;
  SE_UInt32_t setESRampTms;
  SE_UInt32_t setESRandomDelay;
  SE_UInt16_t setGradW;
  SE_UInt16_t setSoftGradW;
} SE_DefaultDERControl_t;

typedef struct {
  SE_PowerOfTenMultiplierType_t multiplier;
  SE_Int48_t value;
} SE_SignedRealEnergy_t;

// #define SE_description_exists (1 << 0)
// #define SE_subscribable_exists (1 << 1)
// #define SE_version_exists (1 << 2)
// #define SE_responseRequired_exists (1 << 4)
typedef struct {
  uint32_t _flags;
  char * href;
  char * replyTo;
  SE_HexBinary8_t responseRequired;
  SE_SubscribableType_t subscribable;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_TimeType_t creationTime;
  SE_EventStatus_t EventStatus;
  SE_DateTimeInterval_t interval;
  SE_SignedRealEnergy_t energyAvailable;
  SE_ActivePower_t powerAvailable;
  SE_mRIDType_t subject;
} SE_FlowReservationResponse_t;

// #define SE_subscribable_exists (1 << 1)
// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_UInt32_t all;
  SE_UInt32_t results;
  SE_UInt32_t pollRate;
  List *FlowReservationResponse;
} SE_FlowReservationResponseList_t;

typedef struct {
  SE_TimeType_t dateTime;
  SE_UInt8_t requestStatus;
} SE_RequestStatus_t;

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
#define SE_durationRequested_exists (1 << 3)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_TimeType_t creationTime;
  SE_UInt16_t durationRequested;
  SE_SignedRealEnergy_t energyRequested;
  SE_DateTimeInterval_t intervalRequested;
  SE_ActivePower_t powerRequested;
  SE_RequestStatus_t RequestStatus;
} SE_FlowReservationRequest_t;

// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  SE_UInt32_t pollRate;
  List *FlowReservationRequest;
} SE_FlowReservationRequestList_t;

// #define SE_description_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_String32_t description;
  SE_DateTimeInterval_t interval;
} SE_SupplyInterruptionOverride_t;

typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *SupplyInterruptionOverride;
} SE_SupplyInterruptionOverrideList_t;

typedef SE_UInt8_t SE_ServiceStatusType_t;

typedef struct {
  SE_ServiceStatusType_t newStatus;
  SE_TimeType_t startTime;
} SE_ServiceChange_t;

typedef SE_UInt8_t SE_CreditTypeType_t;

typedef struct {
  SE_CreditTypeType_t newType;
  SE_TimeType_t startTime;
} SE_CreditTypeChange_t;

#define SE_creditTypeChange_exists (1 << 0)
#define SE_creditTypeInUse_exists (1 << 1)
#define SE_serviceChange_exists (1 << 2)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_CreditTypeChange_t creditTypeChange;
  SE_CreditTypeType_t creditTypeInUse;
  SE_ServiceChange_t serviceChange;
  SE_ServiceStatusType_t serviceStatus;
} SE_PrepayOperationStatus_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_UsagePointLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_MeterReadingListLink_t;

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
#define SE_deviceLFDI_exists (1 << 3)
#define SE_MeterReadingListLink_exists (1 << 4)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_RoleFlagsType_t roleFlags;
  SE_ServiceKind_t serviceCategoryKind;
  SE_UInt8_t status;
  SE_HexBinary160_t deviceLFDI;
  SE_MeterReadingListLink_t MeterReadingListLink;
} SE_UsagePoint_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_SupplyInterruptionOverrideListLink_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_PrepayOperationStatusLink_t;

typedef SE_UInt8_t SE_PrepayModeType_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_CreditRegisterListLink_t;

typedef SE_UInt16_t SE_CurrencyCode_t;

typedef struct {
  SE_PowerOfTenMultiplierType_t multiplier;
  SE_UInt48_t value;
} SE_RealEnergy_t;

#define SE_energyUnit_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  SE_RealEnergy_t energyUnit;
  SE_CurrencyCode_t monetaryUnit;
  SE_PowerOfTenMultiplierType_t multiplier;
  SE_Int32_t value;
} SE_AccountingUnit_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_ActiveSupplyInterruptionOverrideListLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_ActiveCreditRegisterListLink_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_AccountBalanceLink_t;

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
#define SE_ActiveCreditRegisterListLink_exists (1 << 3)
#define SE_ActiveSupplyInterruptionOverrideListLink_exists (1 << 4)
#define SE_creditExpiryLevel_exists (1 << 5)
#define SE_lowCreditWarningLevel_exists (1 << 6)
#define SE_lowEmergencyCreditWarningLevel_exists (1 << 7)
#define SE_UsagePointLink_exists (1 << 14)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_AccountBalanceLink_t AccountBalanceLink;
  SE_ActiveCreditRegisterListLink_t ActiveCreditRegisterListLink;
  SE_ActiveSupplyInterruptionOverrideListLink_t ActiveSupplyInterruptionOverrideListLink;
  SE_AccountingUnit_t creditExpiryLevel;
  SE_CreditRegisterListLink_t CreditRegisterListLink;
  SE_AccountingUnit_t lowCreditWarningLevel;
  SE_AccountingUnit_t lowEmergencyCreditWarningLevel;
  SE_PrepayModeType_t prepayMode;
  SE_PrepayOperationStatusLink_t PrepayOperationStatusLink;
  SE_SupplyInterruptionOverrideListLink_t SupplyInterruptionOverrideListLink;
  List *UsagePoint;
  SE_UsagePointLink_t UsagePointLink;
} SE_Prepayment_t;

// #define SE_subscribable_exists (1 << 1)
// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_UInt32_t all;
  SE_UInt32_t results;
  SE_UInt32_t pollRate;
  List *Prepayment;
} SE_PrepaymentList_t;

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
#define SE_creditType_exists (1 << 3)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_AccountingUnit_t creditAmount;
  SE_CreditTypeType_t creditType;
  SE_TimeType_t effectiveTime;
  SE_String32_t token;
} SE_CreditRegister_t;

typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *CreditRegister;
} SE_CreditRegisterList_t;

typedef SE_UInt8_t SE_CreditStatusType_t;

#define SE_creditStatus_exists (1 << 0)
#define SE_emergencyCredit_exists (1 << 1)
#define SE_emergencyCreditStatus_exists (1 << 2)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_AccountingUnit_t availableCredit;
  SE_CreditStatusType_t creditStatus;
  SE_AccountingUnit_t emergencyCredit;
  SE_CreditStatusType_t emergencyCreditStatus;
} SE_AccountBalance_t;

typedef char SE_String42_t[42];
typedef char SE_String20_t[20];

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
#define SE_email_exists (1 << 3)
#define SE_phone_exists (1 << 4)
#define SE_providerID_exists (1 << 5)
#define SE_web_exists (1 << 6)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_String32_t email;
  SE_String20_t phone;
  SE_UInt32_t providerID;
  SE_String42_t web;
} SE_ServiceSupplier_t;

typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *ServiceSupplier;
} SE_ServiceSupplierList_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_ReadingTypeLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_BillingReadingSetListLink_t;

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
#define SE_BillingReadingSetListLink_exists (1 << 3)
#define SE_ReadingTypeLink_exists (1 << 4)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_BillingReadingSetListLink_t BillingReadingSetListLink;
  SE_ReadingTypeLink_t ReadingTypeLink;
} SE_BillingMeterReadingBase_t;

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
// #define SE_BillingReadingSetListLink_exists (1 << 3)
// #define SE_ReadingTypeLink_exists (1 << 4)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_BillingReadingSetListLink_t BillingReadingSetListLink;
  SE_ReadingTypeLink_t ReadingTypeLink;
} SE_TargetReading_t;

typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *TargetReading;
} SE_TargetReadingList_t;

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
// #define SE_BillingReadingSetListLink_exists (1 << 3)
// #define SE_ReadingTypeLink_exists (1 << 4)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_BillingReadingSetListLink_t BillingReadingSetListLink;
  SE_ReadingTypeLink_t ReadingTypeLink;
} SE_ProjectionReading_t;

typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *ProjectionReading;
} SE_ProjectionReadingList_t;

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
// #define SE_BillingReadingSetListLink_exists (1 << 3)
// #define SE_ReadingTypeLink_exists (1 << 4)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_BillingReadingSetListLink_t BillingReadingSetListLink;
  SE_ReadingTypeLink_t ReadingTypeLink;
} SE_HistoricalReading_t;

typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *HistoricalReading;
} SE_HistoricalReadingList_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_TariffProfileLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_TargetReadingListLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_ProjectionReadingListLink_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_PrepaymentLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_HistoricalReadingListLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_BillingPeriodListLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_ActiveTargetReadingListLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_ActiveProjectionReadingListLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_ActiveBillingPeriodListLink_t;

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
#define SE_ActiveBillingPeriodListLink_exists (1 << 3)
#define SE_ActiveProjectionReadingListLink_exists (1 << 4)
#define SE_ActiveTargetReadingListLink_exists (1 << 5)
#define SE_BillingPeriodListLink_exists (1 << 6)
#define SE_HistoricalReadingListLink_exists (1 << 7)
#define SE_PrepaymentLink_exists (1 << 8)
#define SE_ProjectionReadingListLink_exists (1 << 9)
#define SE_serviceAccount_exists (1 << 10)
#define SE_serviceLocation_exists (1 << 11)
#define SE_TargetReadingListLink_exists (1 << 12)
#define SE_TariffProfileLink_exists (1 << 13)
// #define SE_UsagePointLink_exists (1 << 14)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_ActiveBillingPeriodListLink_t ActiveBillingPeriodListLink;
  SE_ActiveProjectionReadingListLink_t ActiveProjectionReadingListLink;
  SE_ActiveTargetReadingListLink_t ActiveTargetReadingListLink;
  SE_BillingPeriodListLink_t BillingPeriodListLink;
  SE_HistoricalReadingListLink_t HistoricalReadingListLink;
  SE_PrepaymentLink_t PrepaymentLink;
  SE_ProjectionReadingListLink_t ProjectionReadingListLink;
  SE_String42_t serviceAccount;
  SE_String42_t serviceLocation;
  SE_TargetReadingListLink_t TargetReadingListLink;
  SE_TariffProfileLink_t TariffProfileLink;
  SE_UsagePointLink_t UsagePointLink;
} SE_CustomerAgreement_t;

// #define SE_subscribable_exists (1 << 1)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *CustomerAgreement;
} SE_CustomerAgreementList_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_ServiceSupplierLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_CustomerAgreementListLink_t;

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
#define SE_customerAccount_exists (1 << 3)
#define SE_CustomerAgreementListLink_exists (1 << 4)
#define SE_customerName_exists (1 << 5)
#define SE_ServiceSupplierLink_exists (1 << 6)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_UInt16_t currency;
  SE_String42_t customerAccount;
  SE_CustomerAgreementListLink_t CustomerAgreementListLink;
  SE_String42_t customerName;
  SE_PowerOfTenMultiplierType_t pricePowerOfTenMultiplier;
  SE_ServiceSupplierLink_t ServiceSupplierLink;
} SE_CustomerAccount_t;

// #define SE_subscribable_exists (1 << 1)
// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_UInt32_t all;
  SE_UInt32_t results;
  SE_UInt32_t pollRate;
  List *CustomerAccount;
} SE_CustomerAccountList_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_BillingReadingListLink_t;

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
#define SE_BillingReadingListLink_exists (1 << 3)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_DateTimeInterval_t timePeriod;
  SE_BillingReadingListLink_t BillingReadingListLink;
} SE_BillingReadingSet_t;

// #define SE_subscribable_exists (1 << 1)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *BillingReadingSet;
} SE_BillingReadingSetList_t;

typedef SE_UInt8_t SE_ChargeKind_t;

// #define SE_description_exists (1 << 0)
// #define SE_kind_exists (1 << 17)
typedef struct {
  uint32_t _flags;
  SE_String20_t description;
  SE_ChargeKind_t kind;
  SE_Int32_t value;
} SE_Charge_t;

// #define SE_consumptionBlock_exists (1 << 2)
// #define SE_qualityFlags_exists (1 << 3)
// #define SE_timePeriod_exists (1 << 4)
// #define SE_touTier_exists (1 << 5)
// #define SE_value_exists (1 << 6)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_ConsumptionBlockType_t consumptionBlock;
  SE_HexBinary16_t qualityFlags;
  SE_DateTimeInterval_t timePeriod;
  SE_TOUType_t touTier;
  SE_Int48_t value;
  List *Charge;
} SE_BillingReading_t;

typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *BillingReading;
} SE_BillingReadingList_t;

#define SE_billLastPeriod_exists (1 << 0)
#define SE_billToDate_exists (1 << 1)
#define SE_statusTimeStamp_exists (1 << 2)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_Int48_t billLastPeriod;
  SE_Int48_t billToDate;
  SE_DateTimeInterval_t interval;
  SE_TimeType_t statusTimeStamp;
} SE_BillingPeriod_t;

// #define SE_subscribable_exists (1 << 1)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *BillingPeriod;
} SE_BillingPeriodList_t;

typedef SE_UInt8_t SE_PriorityType_t;

// #define SE_description_exists (1 << 0)
// #define SE_subscribable_exists (1 << 1)
// #define SE_version_exists (1 << 2)
// #define SE_responseRequired_exists (1 << 4)
#define SE_originator_exists (1 << 5)
typedef struct {
  uint32_t _flags;
  char * href;
  char * replyTo;
  SE_HexBinary8_t responseRequired;
  SE_SubscribableType_t subscribable;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_TimeType_t creationTime;
  SE_EventStatus_t EventStatus;
  SE_DateTimeInterval_t interval;
  SE_String20_t originator;
  SE_PriorityType_t priority;
  char * textMessage;
} SE_TextMessage_t;

// #define SE_subscribable_exists (1 << 1)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *TextMessage;
} SE_TextMessageList_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_TextMessageListLink_t;

typedef SE_String42_t SE_LocaleType_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_ActiveTextMessageListLink_t;

// #define SE_description_exists (1 << 0)
// #define SE_subscribable_exists (1 << 1)
// #define SE_version_exists (1 << 2)
#define SE_ActiveTextMessageListLink_exists (1 << 3)
#define SE_TextMessageListLink_exists (1 << 4)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_ActiveTextMessageListLink_t ActiveTextMessageListLink;
  SE_LocaleType_t locale;
  SE_PrimacyType_t primacy;
  SE_TextMessageListLink_t TextMessageListLink;
} SE_MessagingProgram_t;

// #define SE_subscribable_exists (1 << 1)
// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_UInt32_t all;
  SE_UInt32_t results;
  SE_UInt32_t pollRate;
  List *MessagingProgram;
} SE_MessagingProgramList_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_ConsumptionTariffIntervalListLink_t;

// #define SE_description_exists (1 << 0)
// #define SE_subscribable_exists (1 << 1)
// #define SE_version_exists (1 << 2)
// #define SE_responseRequired_exists (1 << 4)
// #define SE_randomizeDuration_exists (1 << 5)
// #define SE_randomizeStart_exists (1 << 6)
#define SE_ConsumptionTariffIntervalListLink_exists (1 << 7)
typedef struct {
  uint32_t _flags;
  char * href;
  char * replyTo;
  SE_HexBinary8_t responseRequired;
  SE_SubscribableType_t subscribable;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_TimeType_t creationTime;
  SE_EventStatus_t EventStatus;
  SE_DateTimeInterval_t interval;
  SE_OneHourRangeType_t randomizeDuration;
  SE_OneHourRangeType_t randomizeStart;
  SE_ConsumptionTariffIntervalListLink_t ConsumptionTariffIntervalListLink;
  SE_TOUType_t touTier;
} SE_TimeTariffInterval_t;

// #define SE_subscribable_exists (1 << 1)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *TimeTariffInterval;
} SE_TimeTariffIntervalList_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_RateComponentListLink_t;

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
#define SE_currency_exists (1 << 3)
#define SE_pricePowerOfTenMultiplier_exists (1 << 4)
#define SE_rateCode_exists (1 << 5)
#define SE_RateComponentListLink_exists (1 << 6)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_CurrencyCode_t currency;
  SE_PowerOfTenMultiplierType_t pricePowerOfTenMultiplier;
  SE_PrimacyType_t primacy;
  SE_String20_t rateCode;
  SE_RateComponentListLink_t RateComponentListLink;
  SE_ServiceKind_t serviceCategoryKind;
} SE_TariffProfile_t;

// #define SE_subscribable_exists (1 << 1)
// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_UInt32_t all;
  SE_UInt32_t results;
  SE_UInt32_t pollRate;
  List *TariffProfile;
} SE_TariffProfileList_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_TimeTariffIntervalListLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_ActiveTimeTariffIntervalListLink_t;

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
#define SE_ActiveTimeTariffIntervalListLink_exists (1 << 3)
#define SE_flowRateEndLimit_exists (1 << 4)
#define SE_flowRateStartLimit_exists (1 << 5)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_ActiveTimeTariffIntervalListLink_t ActiveTimeTariffIntervalListLink;
  SE_UnitValueType_t flowRateEndLimit;
  SE_UnitValueType_t flowRateStartLimit;
  SE_ReadingTypeLink_t ReadingTypeLink;
  SE_RoleFlagsType_t roleFlags;
  SE_TimeTariffIntervalListLink_t TimeTariffIntervalListLink;
} SE_RateComponent_t;

typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *RateComponent;
} SE_RateComponentList_t;

typedef SE_UInt8_t SE_CostKindType_t;

typedef struct {
  SE_UInt32_t amount;
  SE_CostKindType_t costKind;
  SE_UInt8_t costLevel;
  SE_UInt8_t numCostLevels;
} SE_EnvironmentalCost_t;

#define SE_price_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_ConsumptionBlockType_t consumptionBlock;
  List *EnvironmentalCost;
  SE_Int32_t price;
  SE_UInt48_t startValue;
} SE_ConsumptionTariffInterval_t;

typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *ConsumptionTariffInterval;
} SE_ConsumptionTariffIntervalList_t;

// #define SE_subscribable_exists (1 << 1)
// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_UInt32_t all;
  SE_UInt32_t results;
  SE_UInt32_t pollRate;
  List *UsagePoint;
} SE_UsagePointList_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_ReadingListLink_t;

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
#define SE_ReadingListLink_exists (1 << 3)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_DateTimeInterval_t timePeriod;
  SE_ReadingListLink_t ReadingListLink;
} SE_ReadingSet_t;

// #define SE_subscribable_exists (1 << 1)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *ReadingSet;
} SE_ReadingSetList_t;

// #define SE_subscribable_exists (1 << 1)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *Reading;
} SE_ReadingList_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_ReadingSetListLink_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_ReadingLink_t;

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
#define SE_ReadingLink_exists (1 << 3)
#define SE_ReadingSetListLink_exists (1 << 4)
// #define SE_RateComponentListLink_exists (1 << 6)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_RateComponentListLink_t RateComponentListLink;
  SE_ReadingLink_t ReadingLink;
  SE_ReadingSetListLink_t ReadingSetListLink;
  SE_ReadingTypeLink_t ReadingTypeLink;
} SE_MeterReading_t;

// #define SE_subscribable_exists (1 << 1)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *MeterReading;
} SE_MeterReadingList_t;

typedef SE_UInt8_t SE_UnitType_t;

typedef struct {
  SE_UnitType_t type;
  SE_UInt16_t value;
} SE_TargetReduction_t;

#define SE_coolingSetpoint_exists (1 << 0)
#define SE_heatingSetpoint_exists (1 << 1)
typedef struct {
  uint32_t _flags;
  SE_Int16_t coolingSetpoint;
  SE_Int16_t heatingSetpoint;
} SE_SetPoint_t;

#define SE_coolingOffset_exists (1 << 0)
#define SE_heatingOffset_exists (1 << 1)
#define SE_loadAdjustmentPercentageOffset_exists (1 << 2)
typedef struct {
  uint32_t _flags;
  SE_UInt8_t coolingOffset;
  SE_UInt8_t heatingOffset;
  SE_PerCent_t loadAdjustmentPercentageOffset;
} SE_Offset_t;

typedef struct {
  SE_UInt8_t normalValue;
} SE_DutyCycle_t;

typedef SE_UInt8_t SE_ApplianceLoadReductionType_t;

typedef struct {
  SE_ApplianceLoadReductionType_t type;
} SE_ApplianceLoadReduction_t;

// #define SE_description_exists (1 << 0)
// #define SE_subscribable_exists (1 << 1)
// #define SE_version_exists (1 << 2)
// #define SE_responseRequired_exists (1 << 4)
// #define SE_randomizeDuration_exists (1 << 5)
// #define SE_randomizeStart_exists (1 << 6)
#define SE_drProgramMandatory_true (1 << 7)
#define SE_loadShiftForward_true (1 << 8)
#define SE_TargetReduction_exists (1 << 9)
#define SE_ApplianceLoadReduction_exists (1 << 10)
#define SE_DutyCycle_exists (1 << 11)
#define SE_Offset_exists (1 << 12)
#define SE_overrideDuration_exists (1 << 13)
#define SE_SetPoint_exists (1 << 14)
typedef struct {
  uint32_t _flags;
  char * href;
  char * replyTo;
  SE_HexBinary8_t responseRequired;
  SE_SubscribableType_t subscribable;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_TimeType_t creationTime;
  SE_EventStatus_t EventStatus;
  SE_DateTimeInterval_t interval;
  SE_OneHourRangeType_t randomizeDuration;
  SE_OneHourRangeType_t randomizeStart;
  SE_ApplianceLoadReduction_t ApplianceLoadReduction;
  SE_DeviceCategoryType_t deviceCategory;
  SE_DutyCycle_t DutyCycle;
  SE_Offset_t Offset;
  SE_UInt16_t overrideDuration;
  SE_SetPoint_t SetPoint;
  SE_TargetReduction_t TargetReduction;
} SE_EndDeviceControl_t;

// #define SE_subscribable_exists (1 << 1)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *EndDeviceControl;
} SE_EndDeviceControlList_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_EndDeviceControlListLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_ActiveEndDeviceControlListLink_t;

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
#define SE_ActiveEndDeviceControlListLink_exists (1 << 3)
#define SE_availabilityUpdatePercentChangeThreshold_exists (1 << 4)
#define SE_availabilityUpdatePowerChangeThreshold_exists (1 << 5)
#define SE_EndDeviceControlListLink_exists (1 << 6)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_ActiveEndDeviceControlListLink_t ActiveEndDeviceControlListLink;
  SE_PerCent_t availabilityUpdatePercentChangeThreshold;
  SE_ActivePower_t availabilityUpdatePowerChangeThreshold;
  SE_EndDeviceControlListLink_t EndDeviceControlListLink;
  SE_PrimacyType_t primacy;
} SE_DemandResponseProgram_t;

// #define SE_subscribable_exists (1 << 1)
// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_UInt32_t all;
  SE_UInt32_t results;
  SE_UInt32_t pollRate;
  List *DemandResponseProgram;
} SE_DemandResponseProgramList_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_DemandResponseProgramLink_t;

#define SE_DemandResponseProgramLink_exists (1 << 0)
#define SE_sheddablePercent_exists (1 << 1)
#define SE_sheddablePower_exists (1 << 2)
// #define SE_availabilityDuration_exists (1 << 7)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t availabilityDuration;
  SE_DemandResponseProgramLink_t DemandResponseProgramLink;
  SE_PerCent_t sheddablePercent;
  SE_ActivePower_t sheddablePower;
} SE_LoadShedAvailability_t;

// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  SE_UInt32_t pollRate;
  List *LoadShedAvailability;
} SE_LoadShedAvailabilityList_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_FileLink_t;

#define SE_FileLink_exists (1 << 0)
// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t pollRate;
  SE_TimeType_t activateTime;
  SE_FileLink_t FileLink;
  SE_UInt8_t loadPercent;
  SE_TimeType_t nextRequestAttempt;
  SE_UInt16_t request503Count;
  SE_UInt16_t requestFailCount;
  SE_UInt8_t status;
  SE_TimeType_t statusTime;
} SE_FileStatus_t;

typedef char SE_String16_t[16];
typedef SE_UInt32_t SE_PENType_t;

// #define SE_lFDI_exists (1 << 4)
#define SE_mfHwVer_exists (1 << 5)
#define SE_mfSerNum_exists (1 << 6)
#define SE_activateTime_exists (1 << 7)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_TimeType_t activateTime;
  char * fileURI;
  SE_HexBinary160_t lFDI;
  SE_String32_t mfHwVer;
  SE_PENType_t mfID;
  SE_String32_t mfModel;
  SE_String32_t mfSerNum;
  SE_String16_t mfVer;
  SE_UInt32_t size;
  SE_HexBinary16_t type;
} SE_File_t;

// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  SE_UInt32_t pollRate;
  List *File;
} SE_FileList_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_RateComponentLink_t;

typedef struct {
  uint32_t _flags;
  char * href;
  SE_Int32_t consumeThreshold;
  SE_Int32_t maxReductionThreshold;
  SE_RateComponentLink_t RateComponentLink;
} SE_PriceResponseCfg_t;

typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *PriceResponseCfg;
} SE_PriceResponseCfgList_t;

typedef SE_Int32_t SE_TimeOffsetType_t;
typedef SE_HexBinary32_t SE_DstRuleType_t;

typedef struct {
  SE_DstRuleType_t dstEndRule;
  SE_TimeOffsetType_t dstOffset;
  SE_DstRuleType_t dstStartRule;
  SE_TimeOffsetType_t tzOffset;
} SE_TimeConfiguration_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_PriceResponseCfgListLink_t;

#define SE_batteryInstallTime_exists (1 << 0)
#define SE_lowChargeThreshold_exists (1 << 1)
typedef struct {
  uint32_t _flags;
  SE_TimeType_t batteryInstallTime;
  SE_UInt32_t lowChargeThreshold;
} SE_PowerConfiguration_t;

// #define SE_subscribable_exists (1 << 1)
#define SE_PowerConfiguration_exists (1 << 2)
#define SE_PriceResponseCfgListLink_exists (1 << 3)
#define SE_TimeConfiguration_exists (1 << 4)
// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_UInt32_t pollRate;
  SE_LocaleType_t currentLocale;
  SE_PowerConfiguration_t PowerConfiguration;
  SE_PriceResponseCfgListLink_t PriceResponseCfgListLink;
  SE_TimeConfiguration_t TimeConfiguration;
  SE_String32_t userDeviceName;
} SE_Configuration_t;

#define SE_details_exists (1 << 0)
#define SE_extendedData_exists (1 << 1)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_TimeType_t createdDateTime;
  SE_String32_t details;
  SE_UInt32_t extendedData;
  SE_UInt8_t functionSet;
  SE_UInt8_t logEventCode;
  SE_UInt16_t logEventID;
  SE_PENType_t logEventPEN;
  SE_UInt8_t profileID;
} SE_LogEvent_t;

// #define SE_subscribable_exists (1 << 1)
// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_UInt32_t all;
  SE_UInt32_t results;
  SE_UInt32_t pollRate;
  List *LogEvent;
} SE_LogEventList_t;

typedef struct {
  uint32_t _flags;
  char * href;
  SE_HexBinary128_t DestAddress;
  SE_HexBinary128_t SourceRoute;
} SE_RPLSourceRoutes_t;

typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *RPLSourceRoutes;
} SE_RPLSourceRoutesList_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_RPLSourceRoutesListLink_t;

#define SE_DODAGroot_true (1 << 0)
#define SE_groundedFlag_true (1 << 1)
#define SE_RPLSourceRoutesListLink_exists (1 << 2)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt8_t DODAGid;
  SE_UInt8_t flags;
  SE_UInt8_t MOP;
  SE_UInt8_t PRF;
  SE_UInt16_t rank;
  SE_UInt8_t RPLInstanceID;
  SE_RPLSourceRoutesListLink_t RPLSourceRoutesListLink;
  SE_UInt8_t versionNumber;
} SE_RPLInstance_t;

typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *RPLInstance;
} SE_RPLInstanceList_t;

#define SE_isChild_true (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt8_t linkQuality;
  SE_UInt16_t shortAddress;
} SE_Neighbor_t;

typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *Neighbor;
} SE_NeighborList_t;

#define SE_octetsRx_exists (1 << 0)
#define SE_octetsTx_exists (1 << 1)
typedef struct {
  uint32_t _flags;
  SE_UInt32_t octetsRx;
  SE_UInt32_t octetsTx;
  SE_UInt32_t packetsRx;
  SE_UInt32_t packetsTx;
  SE_UInt32_t rxFragError;
} SE_loWPAN_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_NeighborListLink_t;

#define SE_NeighborListLink_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  SE_HexBinary8_t capabilityInfo;
  SE_NeighborListLink_t NeighborListLink;
  SE_UInt16_t shortAddress;
} SE_IEEE_802_15_4_t;

typedef uint8_t SE_HexBinary64_t[8];

#define SE_IEEE_802_15_4_exists (1 << 0)
#define SE_LLAckNotRx_exists (1 << 1)
#define SE_LLCSMAFail_exists (1 << 2)
#define SE_LLFramesDropRx_exists (1 << 3)
#define SE_LLFramesDropTx_exists (1 << 4)
#define SE_LLFramesRx_exists (1 << 5)
#define SE_LLFramesTx_exists (1 << 6)
#define SE_LLMediaAccessFail_exists (1 << 7)
#define SE_LLOctetsRx_exists (1 << 8)
#define SE_LLOctetsTx_exists (1 << 9)
#define SE_LLRetryCount_exists (1 << 10)
#define SE_LLSecurityErrorRx_exists (1 << 11)
#define SE_loWPAN_exists (1 << 12)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t CRCerrors;
  SE_HexBinary64_t EUI64;
  SE_IEEE_802_15_4_t IEEE_802_15_4;
  SE_UInt8_t linkLayerType;
  SE_UInt32_t LLAckNotRx;
  SE_UInt32_t LLCSMAFail;
  SE_UInt32_t LLFramesDropRx;
  SE_UInt32_t LLFramesDropTx;
  SE_UInt32_t LLFramesRx;
  SE_UInt32_t LLFramesTx;
  SE_UInt32_t LLMediaAccessFail;
  SE_UInt32_t LLOctetsRx;
  SE_UInt32_t LLOctetsTx;
  SE_UInt32_t LLRetryCount;
  SE_UInt32_t LLSecurityErrorRx;
  SE_loWPAN_t loWPAN;
} SE_LLInterface_t;

typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *LLInterface;
} SE_LLInterfaceList_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_LLInterfaceListLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_IPAddrListLink_t;

#define SE_ifDescr_exists (1 << 0)
#define SE_ifHighSpeed_exists (1 << 1)
#define SE_ifInBroadcastPkts_exists (1 << 2)
#define SE_ifIndex_exists (1 << 3)
#define SE_ifInDiscards_exists (1 << 4)
#define SE_ifInErrors_exists (1 << 5)
#define SE_ifInMulticastPkts_exists (1 << 6)
#define SE_ifInOctets_exists (1 << 7)
#define SE_ifInUcastPkts_exists (1 << 8)
#define SE_ifInUnknownProtos_exists (1 << 9)
#define SE_ifMtu_exists (1 << 10)
#define SE_ifName_exists (1 << 11)
#define SE_ifOperStatus_exists (1 << 12)
#define SE_ifOutBroadcastPkts_exists (1 << 13)
#define SE_ifOutDiscards_exists (1 << 14)
#define SE_ifOutErrors_exists (1 << 15)
#define SE_ifOutMulticastPkts_exists (1 << 16)
#define SE_ifOutOctets_exists (1 << 17)
#define SE_ifOutUcastPkts_exists (1 << 18)
#define SE_ifPromiscuousMode_true (1 << 19)
#define SE_ifPromiscuousMode_exists (1 << 20)
#define SE_ifSpeed_exists (1 << 21)
#define SE_ifType_exists (1 << 22)
#define SE_IPAddrListLink_exists (1 << 23)
#define SE_lastResetTime_exists (1 << 24)
#define SE_lastUpdatedTime_exists (1 << 25)
#define SE_LLInterfaceListLink_exists (1 << 26)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_String192_t ifDescr;
  SE_UInt32_t ifHighSpeed;
  SE_UInt32_t ifInBroadcastPkts;
  SE_UInt32_t ifIndex;
  SE_UInt32_t ifInDiscards;
  SE_UInt32_t ifInErrors;
  SE_UInt32_t ifInMulticastPkts;
  SE_UInt32_t ifInOctets;
  SE_UInt32_t ifInUcastPkts;
  SE_UInt32_t ifInUnknownProtos;
  SE_UInt32_t ifMtu;
  SE_String16_t ifName;
  SE_UInt8_t ifOperStatus;
  SE_UInt32_t ifOutBroadcastPkts;
  SE_UInt32_t ifOutDiscards;
  SE_UInt32_t ifOutErrors;
  SE_UInt32_t ifOutMulticastPkts;
  SE_UInt32_t ifOutOctets;
  SE_UInt32_t ifOutUcastPkts;
  SE_UInt32_t ifSpeed;
  SE_UInt16_t ifType;
  SE_IPAddrListLink_t IPAddrListLink;
  SE_Int64_t lastResetTime;
  SE_Int64_t lastUpdatedTime;
  SE_LLInterfaceListLink_t LLInterfaceListLink;
} SE_IPInterface_t;

// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  SE_UInt32_t pollRate;
  List *IPInterface;
} SE_IPInterfaceList_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_RPLInstanceListLink_t;

#define SE_RPLInstanceListLink_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_HexBinary128_t address;
  SE_RPLInstanceListLink_t RPLInstanceListLink;
} SE_IPAddr_t;

typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *IPAddr;
} SE_IPAddrList_t;

typedef struct {
  SE_ActivePower_t chargingPowerNow;
  SE_RealEnergy_t energyRequestNow;
  SE_ActivePower_t maxForwardPower;
  SE_UInt32_t minimumChargingDuration;
  SE_PerCent_t targetStateOfCharge;
  SE_TimeType_t timeChargeIsNeeded;
  SE_TimeType_t timeChargingStatusPEV;
} SE_PEVInfo_t;

typedef SE_UInt8_t SE_PowerSourceType_t;

#define SE_estimatedChargeRemaining_exists (1 << 0)
#define SE_estimatedTimeRemaining_exists (1 << 1)
#define SE_PEVInfo_exists (1 << 2)
#define SE_sessionTimeOnBattery_exists (1 << 3)
#define SE_totalTimeOnBattery_exists (1 << 4)
// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t pollRate;
  SE_UInt8_t batteryStatus;
  SE_TimeType_t changedTime;
  SE_PowerSourceType_t currentPowerSource;
  SE_PerCent_t estimatedChargeRemaining;
  SE_UInt32_t estimatedTimeRemaining;
  SE_PEVInfo_t PEVInfo;
  SE_UInt32_t sessionTimeOnBattery;
  SE_UInt32_t totalTimeOnBattery;
} SE_PowerStatus_t;

typedef struct {
  uint32_t _flags;
  char * href;
  SE_LocaleType_t locale;
} SE_SupportedLocale_t;

typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *SupportedLocale;
} SE_SupportedLocaleList_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_SupportedLocaleListLink_t;

typedef struct {
  SE_String32_t lat;
  SE_String32_t lon;
} SE_GPSLocationType_t;

typedef struct {
  SE_RealEnergy_t averageEnergy;
  SE_ActivePower_t maxDemand;
  SE_HexBinary32_t optionsImplemented;
} SE_DRLCCapabilities_t;

#define SE_DRLCCapabilities_exists (1 << 0)
#define SE_functionsImplemented_exists (1 << 1)
#define SE_gpsLocation_exists (1 << 2)
#define SE_mfInfo_exists (1 << 3)
#define SE_SupportedLocaleListLink_exists (1 << 4)
// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t pollRate;
  SE_DRLCCapabilities_t DRLCCapabilities;
  SE_HexBinary64_t functionsImplemented;
  SE_GPSLocationType_t gpsLocation;
  SE_HexBinary160_t lFDI;
  SE_TimeType_t mfDate;
  SE_String32_t mfHwVer;
  SE_PENType_t mfID;
  SE_String32_t mfInfo;
  SE_String32_t mfModel;
  SE_String32_t mfSerNum;
  SE_PowerSourceType_t primaryPower;
  SE_PowerSourceType_t secondaryPower;
  SE_SupportedLocaleListLink_t SupportedLocaleListLink;
  SE_TimeType_t swActTime;
  SE_String32_t swVer;
} SE_DeviceInformation_t;

#define SE_localTime_exists (1 << 0)
// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t pollRate;
  SE_TimeType_t currentTime;
  SE_TimeType_t dstEndTime;
  SE_TimeOffsetType_t dstOffset;
  SE_TimeType_t dstStartTime;
  SE_TimeType_t localTime;
  SE_UInt8_t quality;
  SE_TimeOffsetType_t tzOffset;
} SE_Time_t;

#define SE_createdDateTime_exists (1 << 0)
#define SE_status_exists (1 << 1)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_TimeType_t createdDateTime;
  SE_HexBinary160_t endDeviceLFDI;
  SE_UInt8_t status;
  SE_mRIDType_t subject;
} SE_Response_t;

// #define SE_createdDateTime_exists (1 << 0)
// #define SE_status_exists (1 << 1)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_TimeType_t createdDateTime;
  SE_HexBinary160_t endDeviceLFDI;
  SE_UInt8_t status;
  SE_mRIDType_t subject;
} SE_TextResponse_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_ResponseListLink_t;

// #define SE_description_exists (1 << 0)
// #define SE_version_exists (1 << 2)
#define SE_ResponseListLink_exists (1 << 3)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
  SE_ResponseListLink_t ResponseListLink;
} SE_ResponseSet_t;

// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  SE_UInt32_t pollRate;
  List *ResponseSet;
} SE_ResponseSetList_t;

typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *Response;
} SE_ResponseList_t;

// #define SE_createdDateTime_exists (1 << 0)
// #define SE_status_exists (1 << 1)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_TimeType_t createdDateTime;
  SE_HexBinary160_t endDeviceLFDI;
  SE_UInt8_t status;
  SE_mRIDType_t subject;
} SE_PriceResponse_t;

typedef struct {
  SE_UnitType_t type;
  SE_UInt16_t value;
} SE_AppliedTargetReduction_t;

// #define SE_createdDateTime_exists (1 << 0)
// #define SE_status_exists (1 << 1)
#define SE_AppliedTargetReduction_exists (1 << 2)
// #define SE_ApplianceLoadReduction_exists (1 << 10)
// #define SE_DutyCycle_exists (1 << 11)
// #define SE_Offset_exists (1 << 12)
// #define SE_overrideDuration_exists (1 << 13)
// #define SE_SetPoint_exists (1 << 14)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_TimeType_t createdDateTime;
  SE_HexBinary160_t endDeviceLFDI;
  SE_UInt8_t status;
  SE_mRIDType_t subject;
  SE_ApplianceLoadReduction_t ApplianceLoadReduction;
  SE_AppliedTargetReduction_t AppliedTargetReduction;
  SE_DutyCycle_t DutyCycle;
  SE_Offset_t Offset;
  SE_UInt16_t overrideDuration;
  SE_SetPoint_t SetPoint;
} SE_DrResponse_t;

// #define SE_createdDateTime_exists (1 << 0)
// #define SE_status_exists (1 << 1)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_TimeType_t createdDateTime;
  SE_HexBinary160_t endDeviceLFDI;
  SE_UInt8_t status;
  SE_mRIDType_t subject;
} SE_FlowReservationResponseResponse_t;

// #define SE_createdDateTime_exists (1 << 0)
// #define SE_status_exists (1 << 1)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_TimeType_t createdDateTime;
  SE_HexBinary160_t endDeviceLFDI;
  SE_UInt8_t status;
  SE_mRIDType_t subject;
} SE_DERControlResponse_t;

typedef struct {
  uint32_t _flags;
  char * href;
  char * subscribedResource;
} SE_SubscriptionBase_t;

#define SE_Resource_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  char * subscribedResource;
  char * newResourceURI;
  SubstitutionType Resource;
  SE_UInt8_t status;
  char * subscriptionURI;
} SE_Notification_t;

typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  List *Notification;
} SE_NotificationList_t;

typedef struct {
  SE_UInt8_t attributeIdentifier;
  SE_Int48_t lowerThreshold;
  SE_Int48_t upperThreshold;
} SE_Condition_t;

#define SE_Condition_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  char * subscribedResource;
  SE_Condition_t Condition;
  SE_UInt8_t encoding;
  SE_String16_t level;
  SE_UInt32_t limit;
  char * notificationURI;
} SE_Subscription_t;

// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
  SE_UInt32_t results;
  SE_UInt32_t pollRate;
  List *Subscription;
} SE_SubscriptionList_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_UsagePointListLink_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_TimeLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_TariffProfileListLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_ResponseSetListLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_PrepaymentListLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_MessagingProgramListLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_FileListLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_DERProgramListLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_DemandResponseProgramListLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_CustomerAccountListLink_t;

// #define SE_description_exists (1 << 0)
// #define SE_subscribable_exists (1 << 1)
// #define SE_version_exists (1 << 2)
// #define SE_TimeLink_exists (1 << 5)
#define SE_CustomerAccountListLink_exists (1 << 6)
#define SE_DemandResponseProgramListLink_exists (1 << 7)
#define SE_DERProgramListLink_exists (1 << 8)
#define SE_FileListLink_exists (1 << 9)
#define SE_MessagingProgramListLink_exists (1 << 10)
#define SE_PrepaymentListLink_exists (1 << 11)
#define SE_ResponseSetListLink_exists (1 << 12)
#define SE_TariffProfileListLink_exists (1 << 13)
#define SE_UsagePointListLink_exists (1 << 14)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_CustomerAccountListLink_t CustomerAccountListLink;
  SE_DemandResponseProgramListLink_t DemandResponseProgramListLink;
  SE_DERProgramListLink_t DERProgramListLink;
  SE_FileListLink_t FileListLink;
  SE_MessagingProgramListLink_t MessagingProgramListLink;
  SE_PrepaymentListLink_t PrepaymentListLink;
  SE_ResponseSetListLink_t ResponseSetListLink;
  SE_TariffProfileListLink_t TariffProfileListLink;
  SE_TimeLink_t TimeLink;
  SE_UsagePointListLink_t UsagePointListLink;
} SE_FunctionSetAssignmentsBase_t;

// #define SE_description_exists (1 << 0)
// #define SE_subscribable_exists (1 << 1)
// #define SE_version_exists (1 << 2)
// #define SE_TimeLink_exists (1 << 5)
// #define SE_CustomerAccountListLink_exists (1 << 6)
// #define SE_DemandResponseProgramListLink_exists (1 << 7)
// #define SE_DERProgramListLink_exists (1 << 8)
// #define SE_FileListLink_exists (1 << 9)
// #define SE_MessagingProgramListLink_exists (1 << 10)
// #define SE_PrepaymentListLink_exists (1 << 11)
// #define SE_ResponseSetListLink_exists (1 << 12)
// #define SE_TariffProfileListLink_exists (1 << 13)
// #define SE_UsagePointListLink_exists (1 << 14)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_CustomerAccountListLink_t CustomerAccountListLink;
  SE_DemandResponseProgramListLink_t DemandResponseProgramListLink;
  SE_DERProgramListLink_t DERProgramListLink;
  SE_FileListLink_t FileListLink;
  SE_MessagingProgramListLink_t MessagingProgramListLink;
  SE_PrepaymentListLink_t PrepaymentListLink;
  SE_ResponseSetListLink_t ResponseSetListLink;
  SE_TariffProfileListLink_t TariffProfileListLink;
  SE_TimeLink_t TimeLink;
  SE_UsagePointListLink_t UsagePointListLink;
  SE_SubscribableType_t subscribable;
  SE_mRIDType_t mRID;
  SE_String32_t description;
  SE_VersionType_t version;
} SE_FunctionSetAssignments_t;

// #define SE_subscribable_exists (1 << 1)
// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_UInt32_t all;
  SE_UInt32_t results;
  SE_UInt32_t pollRate;
  List *FunctionSetAssignments;
} SE_FunctionSetAssignmentsList_t;

typedef uint64_t SE_UInt40_t;
typedef SE_UInt40_t SE_SFDIType_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_PowerStatusLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_LogEventListLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_LoadShedAvailabilityListLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_IPInterfaceListLink_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_FileStatusLink_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_DeviceStatusLink_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_DeviceInformationLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_DERListLink_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_ConfigurationLink_t;

// #define SE_subscribable_exists (1 << 1)
// #define SE_deviceCategory_exists (1 << 3)
// #define SE_lFDI_exists (1 << 4)
#define SE_ConfigurationLink_exists (1 << 5)
#define SE_DERListLink_exists (1 << 6)
#define SE_DeviceInformationLink_exists (1 << 7)
#define SE_DeviceStatusLink_exists (1 << 8)
#define SE_FileStatusLink_exists (1 << 9)
#define SE_IPInterfaceListLink_exists (1 << 10)
#define SE_LoadShedAvailabilityListLink_exists (1 << 11)
#define SE_LogEventListLink_exists (1 << 12)
#define SE_PowerStatusLink_exists (1 << 13)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_ConfigurationLink_t ConfigurationLink;
  SE_DERListLink_t DERListLink;
  SE_DeviceCategoryType_t deviceCategory;
  SE_DeviceInformationLink_t DeviceInformationLink;
  SE_DeviceStatusLink_t DeviceStatusLink;
  SE_FileStatusLink_t FileStatusLink;
  SE_IPInterfaceListLink_t IPInterfaceListLink;
  SE_HexBinary160_t lFDI;
  SE_LoadShedAvailabilityListLink_t LoadShedAvailabilityListLink;
  SE_LogEventListLink_t LogEventListLink;
  SE_PowerStatusLink_t PowerStatusLink;
  SE_SFDIType_t sFDI;
} SE_AbstractDevice_t;

// #define SE_subscribable_exists (1 << 1)
// #define SE_deviceCategory_exists (1 << 3)
// #define SE_lFDI_exists (1 << 4)
// #define SE_ConfigurationLink_exists (1 << 5)
// #define SE_DERListLink_exists (1 << 6)
// #define SE_DeviceInformationLink_exists (1 << 7)
// #define SE_DeviceStatusLink_exists (1 << 8)
// #define SE_FileStatusLink_exists (1 << 9)
// #define SE_IPInterfaceListLink_exists (1 << 10)
// #define SE_LoadShedAvailabilityListLink_exists (1 << 11)
// #define SE_LogEventListLink_exists (1 << 12)
// #define SE_PowerStatusLink_exists (1 << 13)
// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_ConfigurationLink_t ConfigurationLink;
  SE_DERListLink_t DERListLink;
  SE_DeviceCategoryType_t deviceCategory;
  SE_DeviceInformationLink_t DeviceInformationLink;
  SE_DeviceStatusLink_t DeviceStatusLink;
  SE_FileStatusLink_t FileStatusLink;
  SE_IPInterfaceListLink_t IPInterfaceListLink;
  SE_HexBinary160_t lFDI;
  SE_LoadShedAvailabilityListLink_t LoadShedAvailabilityListLink;
  SE_LogEventListLink_t LogEventListLink;
  SE_PowerStatusLink_t PowerStatusLink;
  SE_SFDIType_t sFDI;
  SE_UInt32_t pollRate;
} SE_SelfDevice_t;

typedef SE_UInt32_t SE_PINType_t;

// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t pollRate;
  SE_TimeType_t dateTimeRegistered;
  SE_PINType_t pIN;
} SE_Registration_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_SubscriptionListLink_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_RegistrationLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_FunctionSetAssignmentsListLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_FlowReservationResponseListLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_FlowReservationRequestListLink_t;

// #define SE_subscribable_exists (1 << 1)
// #define SE_deviceCategory_exists (1 << 3)
// #define SE_lFDI_exists (1 << 4)
// #define SE_ConfigurationLink_exists (1 << 5)
// #define SE_DERListLink_exists (1 << 6)
// #define SE_DeviceInformationLink_exists (1 << 7)
// #define SE_DeviceStatusLink_exists (1 << 8)
// #define SE_FileStatusLink_exists (1 << 9)
// #define SE_IPInterfaceListLink_exists (1 << 10)
// #define SE_LoadShedAvailabilityListLink_exists (1 << 11)
// #define SE_LogEventListLink_exists (1 << 12)
// #define SE_PowerStatusLink_exists (1 << 13)
#define SE_enabled_true (1 << 14)
#define SE_enabled_exists (1 << 15)
#define SE_FlowReservationRequestListLink_exists (1 << 16)
#define SE_FlowReservationResponseListLink_exists (1 << 17)
#define SE_FunctionSetAssignmentsListLink_exists (1 << 18)
#define SE_RegistrationLink_exists (1 << 19)
#define SE_SubscriptionListLink_exists (1 << 20)
// #define SE_postRate_exists (1 << 21)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_ConfigurationLink_t ConfigurationLink;
  SE_DERListLink_t DERListLink;
  SE_DeviceCategoryType_t deviceCategory;
  SE_DeviceInformationLink_t DeviceInformationLink;
  SE_DeviceStatusLink_t DeviceStatusLink;
  SE_FileStatusLink_t FileStatusLink;
  SE_IPInterfaceListLink_t IPInterfaceListLink;
  SE_HexBinary160_t lFDI;
  SE_LoadShedAvailabilityListLink_t LoadShedAvailabilityListLink;
  SE_LogEventListLink_t LogEventListLink;
  SE_PowerStatusLink_t PowerStatusLink;
  SE_SFDIType_t sFDI;
  SE_TimeType_t changedTime;
  SE_FlowReservationRequestListLink_t FlowReservationRequestListLink;
  SE_FlowReservationResponseListLink_t FlowReservationResponseListLink;
  SE_FunctionSetAssignmentsListLink_t FunctionSetAssignmentsListLink;
  SE_UInt32_t postRate;
  SE_RegistrationLink_t RegistrationLink;
  SE_SubscriptionListLink_t SubscriptionListLink;
} SE_EndDevice_t;

// #define SE_subscribable_exists (1 << 1)
// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_SubscribableType_t subscribable;
  SE_UInt32_t all;
  SE_UInt32_t results;
  SE_UInt32_t pollRate;
  List *EndDevice;
} SE_EndDeviceList_t;

typedef struct {
  SE_PowerOfTenMultiplierType_t multiplier;
  SE_UInt8_t subject;
  SE_Int16_t value;
} SE_Temperature_t;

// #define SE_TimeLink_exists (1 << 5)
#define SE_onCount_exists (1 << 6)
#define SE_opState_exists (1 << 7)
#define SE_opTime_exists (1 << 8)
// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t pollRate;
  SE_TimeType_t changedTime;
  SE_UInt16_t onCount;
  SE_UInt8_t opState;
  SE_UInt32_t opTime;
  List *Temperature;
  SE_TimeLink_t TimeLink;
} SE_DeviceStatus_t;

typedef struct {
  uint32_t _flags;
  char * href;
} SE_SelfDeviceLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_MirrorUsagePointListLink_t;

// #define SE_all_exists (1 << 0)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_UInt32_t all;
} SE_EndDeviceListLink_t;

// #define SE_TimeLink_exists (1 << 5)
// #define SE_CustomerAccountListLink_exists (1 << 6)
// #define SE_DemandResponseProgramListLink_exists (1 << 7)
// #define SE_DERProgramListLink_exists (1 << 8)
// #define SE_FileListLink_exists (1 << 9)
// #define SE_MessagingProgramListLink_exists (1 << 10)
// #define SE_PrepaymentListLink_exists (1 << 11)
// #define SE_ResponseSetListLink_exists (1 << 12)
// #define SE_TariffProfileListLink_exists (1 << 13)
// #define SE_UsagePointListLink_exists (1 << 14)
#define SE_EndDeviceListLink_exists (1 << 15)
#define SE_MirrorUsagePointListLink_exists (1 << 16)
#define SE_SelfDeviceLink_exists (1 << 17)
// #define SE_pollRate_exists (1 << 18)
typedef struct {
  uint32_t _flags;
  char * href;
  SE_CustomerAccountListLink_t CustomerAccountListLink;
  SE_DemandResponseProgramListLink_t DemandResponseProgramListLink;
  SE_DERProgramListLink_t DERProgramListLink;
  SE_FileListLink_t FileListLink;
  SE_MessagingProgramListLink_t MessagingProgramListLink;
  SE_PrepaymentListLink_t PrepaymentListLink;
  SE_ResponseSetListLink_t ResponseSetListLink;
  SE_TariffProfileListLink_t TariffProfileListLink;
  SE_TimeLink_t TimeLink;
  SE_UsagePointListLink_t UsagePointListLink;
  SE_UInt32_t pollRate;
  SE_EndDeviceListLink_t EndDeviceListLink;
  SE_MirrorUsagePointListLink_t MirrorUsagePointListLink;
  SE_SelfDeviceLink_t SelfDeviceLink;
} SE_DeviceCapability_t;

#define SE_AbstractDevice 0
#define SE_AccountBalance 1
#define SE_AccountBalanceLink 2
#define SE_AccountingUnit 3
#define SE_AccumulationBehaviourType 4
#define SE_ActiveBillingPeriodListLink 5
#define SE_ActiveCreditRegisterListLink 6
#define SE_ActiveDERControlListLink 7
#define SE_ActiveEndDeviceControlListLink 8
#define SE_ActiveFlowReservationListLink 9
#define SE_ActivePower 10
#define SE_ActiveProjectionReadingListLink 11
#define SE_ActiveSupplyInterruptionOverrideListLink 12
#define SE_ActiveTargetReadingListLink 13
#define SE_ActiveTextMessageListLink 14
#define SE_ActiveTimeTariffIntervalListLink 15
#define SE_AmpereHour 16
#define SE_ApparentPower 17
#define SE_ApplianceLoadReduction 18
#define SE_ApplianceLoadReductionType 19
#define SE_AppliedTargetReduction 20
#define SE_AssociatedDERProgramListLink 21
#define SE_AssociatedUsagePointLink 22
#define SE_BillingMeterReadingBase 23
#define SE_BillingPeriod 24
#define SE_BillingPeriodList 25
#define SE_BillingPeriodListLink 26
#define SE_BillingReading 27
#define SE_BillingReadingList 28
#define SE_BillingReadingListLink 29
#define SE_BillingReadingSet 30
#define SE_BillingReadingSetList 31
#define SE_BillingReadingSetListLink 32
#define SE_Charge 33
#define SE_ChargeKind 34
#define SE_CommodityType 35
#define SE_Condition 36
#define SE_Configuration 37
#define SE_ConfigurationLink 38
#define SE_ConnectStatusType 39
#define SE_ConsumptionBlockType 40
#define SE_ConsumptionTariffInterval 41
#define SE_ConsumptionTariffIntervalList 42
#define SE_ConsumptionTariffIntervalListLink 43
#define SE_CostKindType 44
#define SE_CreditRegister 45
#define SE_CreditRegisterList 46
#define SE_CreditRegisterListLink 47
#define SE_CreditStatusType 48
#define SE_CreditTypeChange 49
#define SE_CreditTypeType 50
#define SE_CurrencyCode 51
#define SE_CurrentDERProgramLink 52
#define SE_CurrentRMS 53
#define SE_CurveData 54
#define SE_CustomerAccount 55
#define SE_CustomerAccountLink 56
#define SE_CustomerAccountList 57
#define SE_CustomerAccountListLink 58
#define SE_CustomerAgreement 59
#define SE_CustomerAgreementList 60
#define SE_CustomerAgreementListLink 61
#define SE_DER 62
#define SE_DERAvailability 63
#define SE_DERAvailabilityLink 64
#define SE_DERCapability 65
#define SE_DERCapabilityLink 66
#define SE_DERControl 67
#define SE_DERControlBase 68
#define SE_DERControlList 69
#define SE_DERControlListLink 70
#define SE_DERControlResponse 71
#define SE_DERControlType 72
#define SE_DERCurve 73
#define SE_DERCurveLink 74
#define SE_DERCurveList 75
#define SE_DERCurveListLink 76
#define SE_DERCurveType 77
#define SE_DERLink 78
#define SE_DERList 79
#define SE_DERListLink 80
#define SE_DERProgram 81
#define SE_DERProgramLink 82
#define SE_DERProgramList 83
#define SE_DERProgramListLink 84
#define SE_DERSettings 85
#define SE_DERSettingsLink 86
#define SE_DERStatus 87
#define SE_DERStatusLink 88
#define SE_DERType 89
#define SE_DERUnitRefType 90
#define SE_DRLCCapabilities 91
#define SE_DataQualifierType 92
#define SE_DateTimeInterval 93
#define SE_DefaultDERControl 94
#define SE_DefaultDERControlLink 95
#define SE_DemandResponseProgram 96
#define SE_DemandResponseProgramLink 97
#define SE_DemandResponseProgramList 98
#define SE_DemandResponseProgramListLink 99
#define SE_DeviceCapability 100
#define SE_DeviceCapabilityLink 101
#define SE_DeviceCategoryType 102
#define SE_DeviceInformation 103
#define SE_DeviceInformationLink 104
#define SE_DeviceStatus 105
#define SE_DeviceStatusLink 106
#define SE_DrResponse 107
#define SE_DstRuleType 108
#define SE_DutyCycle 109
#define SE_EndDevice 110
#define SE_EndDeviceControl 111
#define SE_EndDeviceControlList 112
#define SE_EndDeviceControlListLink 113
#define SE_EndDeviceLink 114
#define SE_EndDeviceList 115
#define SE_EndDeviceListLink 116
#define SE_EnvironmentalCost 117
#define SE_Error 118
#define SE_Event 119
#define SE_EventStatus 120
#define SE_File 121
#define SE_FileLink 122
#define SE_FileList 123
#define SE_FileListLink 124
#define SE_FileStatus 125
#define SE_FileStatusLink 126
#define SE_FixedPointType 127
#define SE_FixedVar 128
#define SE_FlowDirectionType 129
#define SE_FlowReservationRequest 130
#define SE_FlowReservationRequestList 131
#define SE_FlowReservationRequestListLink 132
#define SE_FlowReservationResponse 133
#define SE_FlowReservationResponseList 134
#define SE_FlowReservationResponseListLink 135
#define SE_FlowReservationResponseResponse 136
#define SE_FreqDroopType 137
#define SE_FunctionSetAssignments 138
#define SE_FunctionSetAssignmentsBase 139
#define SE_FunctionSetAssignmentsList 140
#define SE_FunctionSetAssignmentsListLink 141
#define SE_GPSLocationType 142
#define SE_HistoricalReading 143
#define SE_HistoricalReadingList 144
#define SE_HistoricalReadingListLink 145
#define SE_IEEE_802_15_4 146
#define SE_IPAddr 147
#define SE_IPAddrList 148
#define SE_IPAddrListLink 149
#define SE_IPInterface 150
#define SE_IPInterfaceList 151
#define SE_IPInterfaceListLink 152
#define SE_IdentifiedObject 153
#define SE_InverterStatusType 154
#define SE_KindType 155
#define SE_LLInterface 156
#define SE_LLInterfaceList 157
#define SE_LLInterfaceListLink 158
#define SE_Link 159
#define SE_List 160
#define SE_ListLink 161
#define SE_LoadShedAvailability 162
#define SE_LoadShedAvailabilityList 163
#define SE_LoadShedAvailabilityListLink 164
#define SE_LocalControlModeStatusType 165
#define SE_LocaleType 166
#define SE_LogEvent 167
#define SE_LogEventList 168
#define SE_LogEventListLink 169
#define SE_ManufacturerStatusType 170
#define SE_MessagingProgram 171
#define SE_MessagingProgramList 172
#define SE_MessagingProgramListLink 173
#define SE_MeterReading 174
#define SE_MeterReadingBase 175
#define SE_MeterReadingLink 176
#define SE_MeterReadingList 177
#define SE_MeterReadingListLink 178
#define SE_MirrorMeterReading 179
#define SE_MirrorMeterReadingList 180
#define SE_MirrorReadingSet 181
#define SE_MirrorUsagePoint 182
#define SE_MirrorUsagePointList 183
#define SE_MirrorUsagePointListLink 184
#define SE_Neighbor 185
#define SE_NeighborList 186
#define SE_NeighborListLink 187
#define SE_Notification 188
#define SE_NotificationList 189
#define SE_NotificationListLink 190
#define SE_Offset 191
#define SE_OneHourRangeType 192
#define SE_OperationalModeStatusType 193
#define SE_PENType 194
#define SE_PEVInfo 195
#define SE_PINType 196
#define SE_PerCent 197
#define SE_PhaseCode 198
#define SE_PowerConfiguration 199
#define SE_PowerFactor 200
#define SE_PowerFactorWithExcitation 201
#define SE_PowerOfTenMultiplierType 202
#define SE_PowerSourceType 203
#define SE_PowerStatus 204
#define SE_PowerStatusLink 205
#define SE_PrepayModeType 206
#define SE_PrepayOperationStatus 207
#define SE_PrepayOperationStatusLink 208
#define SE_Prepayment 209
#define SE_PrepaymentLink 210
#define SE_PrepaymentList 211
#define SE_PrepaymentListLink 212
#define SE_PriceResponse 213
#define SE_PriceResponseCfg 214
#define SE_PriceResponseCfgList 215
#define SE_PriceResponseCfgListLink 216
#define SE_PrimacyType 217
#define SE_PriorityType 218
#define SE_ProjectionReading 219
#define SE_ProjectionReadingList 220
#define SE_ProjectionReadingListLink 221
#define SE_RPLInstance 222
#define SE_RPLInstanceList 223
#define SE_RPLInstanceListLink 224
#define SE_RPLSourceRoutes 225
#define SE_RPLSourceRoutesList 226
#define SE_RPLSourceRoutesListLink 227
#define SE_RandomizableEvent 228
#define SE_RateComponent 229
#define SE_RateComponentLink 230
#define SE_RateComponentList 231
#define SE_RateComponentListLink 232
#define SE_ReactivePower 233
#define SE_ReactiveSusceptance 234
#define SE_Reading 235
#define SE_ReadingBase 236
#define SE_ReadingLink 237
#define SE_ReadingList 238
#define SE_ReadingListLink 239
#define SE_ReadingSet 240
#define SE_ReadingSetBase 241
#define SE_ReadingSetList 242
#define SE_ReadingSetListLink 243
#define SE_ReadingType 244
#define SE_ReadingTypeLink 245
#define SE_RealEnergy 246
#define SE_Registration 247
#define SE_RegistrationLink 248
#define SE_RequestStatus 249
#define SE_Resource 250
#define SE_RespondableIdentifiedObject 251
#define SE_RespondableResource 252
#define SE_RespondableSubscribableIdentifiedObject 253
#define SE_Response 254
#define SE_ResponseList 255
#define SE_ResponseListLink 256
#define SE_ResponseSet 257
#define SE_ResponseSetList 258
#define SE_ResponseSetListLink 259
#define SE_RoleFlagsType 260
#define SE_SFDIType 261
#define SE_SelfDevice 262
#define SE_SelfDeviceLink 263
#define SE_ServiceChange 264
#define SE_ServiceKind 265
#define SE_ServiceStatusType 266
#define SE_ServiceSupplier 267
#define SE_ServiceSupplierLink 268
#define SE_ServiceSupplierList 269
#define SE_SetPoint 270
#define SE_SignedPerCent 271
#define SE_SignedRealEnergy 272
#define SE_StateOfChargeStatusType 273
#define SE_StorageModeStatusType 274
#define SE_SubscribableIdentifiedObject 275
#define SE_SubscribableList 276
#define SE_SubscribableResource 277
#define SE_Subscription 278
#define SE_SubscriptionBase 279
#define SE_SubscriptionList 280
#define SE_SubscriptionListLink 281
#define SE_SupplyInterruptionOverride 282
#define SE_SupplyInterruptionOverrideList 283
#define SE_SupplyInterruptionOverrideListLink 284
#define SE_SupportedLocale 285
#define SE_SupportedLocaleList 286
#define SE_SupportedLocaleListLink 287
#define SE_TOUType 288
#define SE_TargetReading 289
#define SE_TargetReadingList 290
#define SE_TargetReadingListLink 291
#define SE_TargetReduction 292
#define SE_TariffProfile 293
#define SE_TariffProfileLink 294
#define SE_TariffProfileList 295
#define SE_TariffProfileListLink 296
#define SE_Temperature 297
#define SE_TextMessage 298
#define SE_TextMessageList 299
#define SE_TextMessageListLink 300
#define SE_TextResponse 301
#define SE_Time 302
#define SE_TimeConfiguration 303
#define SE_TimeLink 304
#define SE_TimeOffsetType 305
#define SE_TimeTariffInterval 306
#define SE_TimeTariffIntervalList 307
#define SE_TimeTariffIntervalListLink 308
#define SE_TimeType 309
#define SE_UnitType 310
#define SE_UnitValueType 311
#define SE_UnsignedFixedPointType 312
#define SE_UomType 313
#define SE_UsagePoint 314
#define SE_UsagePointBase 315
#define SE_UsagePointLink 316
#define SE_UsagePointList 317
#define SE_UsagePointListLink 318
#define SE_VersionType 319
#define SE_VoltageRMS 320
#define SE_WattHour 321
#define SE_loWPAN 322
#define SE_mRIDType 323
#define SE_UsagePointBase_type 401
#define SE_ReadingSetBase_type 373
#define SE_ReadingBase_type 352
#define SE_MirrorUsagePointList_type 424
#define SE_MirrorUsagePoint_type 409
#define SE_MirrorReadingSet_type 379
#define SE_MeterReadingBase_type 386
#define SE_MirrorMeterReadingList_type 430
#define SE_MirrorMeterReading_type 391
#define SE_Int64_type (XS_LONG|ST_SIMPLE)
#define SE_Int48_type (XS_LONG|ST_SIMPLE)
#define SE_Int32_type (XS_INT|ST_SIMPLE)
#define SE_Int16_type (XS_SHORT|ST_SIMPLE)
#define SE_Int8_type (XS_BYTE|ST_SIMPLE)
#define SE_UInt64_type (XS_ULONG|ST_SIMPLE)
#define SE_UInt48_type (XS_ULONG|ST_SIMPLE)
#define SE_UInt40_type (XS_ULONG|ST_SIMPLE)
#define SE_UInt32_type (XS_UINT|ST_SIMPLE)
#define SE_UInt16_type (XS_USHORT|ST_SIMPLE)
#define SE_UInt8_type (XS_UBYTE|ST_SIMPLE)
#define SE_String192_type (xs_type(XS_STRING,192)|ST_SIMPLE)
#define SE_String42_type (xs_type(XS_STRING,42)|ST_SIMPLE)
#define SE_String32_type (xs_type(XS_STRING,32)|ST_SIMPLE)
#define SE_String20_type (xs_type(XS_STRING,20)|ST_SIMPLE)
#define SE_String16_type (xs_type(XS_STRING,16)|ST_SIMPLE)
#define SE_String6_type (xs_type(XS_STRING,6)|ST_SIMPLE)
#define SE_HexBinary160_type (xs_type(XS_HEX_BINARY,20)|ST_SIMPLE)
#define SE_HexBinary128_type (xs_type(XS_HEX_BINARY,16)|ST_SIMPLE)
#define SE_HexBinary64_type (xs_type(XS_HEX_BINARY,8)|ST_SIMPLE)
#define SE_HexBinary48_type (xs_type(XS_HEX_BINARY,6)|ST_SIMPLE)
#define SE_HexBinary32_type (xs_type(XS_HEX_BINARY,4)|ST_SIMPLE)
#define SE_HexBinary16_type (xs_type(XS_HEX_BINARY,2)|ST_SIMPLE)
#define SE_HexBinary8_type (xs_type(XS_HEX_BINARY,1)|ST_SIMPLE)
#define SE_VersionType_type (XS_USHORT|ST_SIMPLE)
#define SE_UomType_type (XS_UBYTE|ST_SIMPLE)
#define SE_UnitValueType_type 324
#define SE_UnitType_type (XS_UBYTE|ST_SIMPLE)
#define SE_TOUType_type (XS_UBYTE|ST_SIMPLE)
#define SE_TimeType_type (XS_LONG|ST_SIMPLE)
#define SE_TimeOffsetType_type (XS_INT|ST_SIMPLE)
#define SE_SubscribableType_type (XS_UBYTE|ST_SIMPLE)
#define SE_SignedRealEnergy_type 826
#define SE_SignedPerCent_type (XS_SHORT|ST_SIMPLE)
#define SE_SFDIType_type (XS_ULONG|ST_SIMPLE)
#define SE_ServiceKind_type (XS_UBYTE|ST_SIMPLE)
#define SE_RoleFlagsType_type (xs_type(XS_HEX_BINARY,2)|ST_SIMPLE)
#define SE_RealEnergy_type 914
#define SE_PrimacyType_type (XS_UBYTE|ST_SIMPLE)
#define SE_PowerOfTenMultiplierType_type (XS_BYTE|ST_SIMPLE)
#define SE_PINType_type (XS_UINT|ST_SIMPLE)
#define SE_PhaseCode_type (XS_UBYTE|ST_SIMPLE)
#define SE_PerCent_type (XS_USHORT|ST_SIMPLE)
#define SE_PENType_type (XS_UINT|ST_SIMPLE)
#define SE_OneHourRangeType_type (XS_SHORT|ST_SIMPLE)
#define SE_mRIDType_type (xs_type(XS_HEX_BINARY,16)|ST_SIMPLE)
#define SE_LocaleType_type (xs_type(XS_STRING,42)|ST_SIMPLE)
#define SE_KindType_type (XS_UBYTE|ST_SIMPLE)
#define SE_GPSLocationType_type 1643
#define SE_FlowDirectionType_type (XS_UBYTE|ST_SIMPLE)
#define SE_DstRuleType_type (xs_type(XS_HEX_BINARY,4)|ST_SIMPLE)
#define SE_DeviceCategoryType_type (xs_type(XS_HEX_BINARY,4)|ST_SIMPLE)
#define SE_DateTimeInterval_type 349
#define SE_DataQualifierType_type (XS_UBYTE|ST_SIMPLE)
#define SE_CurrencyCode_type (XS_USHORT|ST_SIMPLE)
#define SE_ConsumptionBlockType_type (XS_UBYTE|ST_SIMPLE)
#define SE_CommodityType_type (XS_UBYTE|ST_SIMPLE)
#define SE_ApplianceLoadReductionType_type (XS_UBYTE|ST_SIMPLE)
#define SE_AccumulationBehaviourType_type (XS_UBYTE|ST_SIMPLE)
#define SE_RandomizableEvent_type 655
#define SE_EventStatus_type 630
#define SE_Event_type 644
#define SE_Error_type 435
#define SE_SubscribableResource_type 499
#define SE_SubscribableList_type 543
#define SE_SubscribableIdentifiedObject_type 526
#define SE_RespondableSubscribableIdentifiedObject_type 636
#define SE_RespondableResource_type 438
#define SE_RespondableIdentifiedObject_type 442
#define SE_Resource_type 328
#define SE_ListLink_type 451
#define SE_List_type 420
#define SE_Link_type 449
#define SE_IdentifiedObject_type 368
#define SE_UsagePointListLink_type 1776
#define SE_UsagePointLink_type 891
#define SE_TimeTariffIntervalListLink_type 1240
#define SE_TimeLink_type 1779
#define SE_TextMessageListLink_type 1172
#define SE_TariffProfileListLink_type 1781
#define SE_TariffProfileLink_type 1036
#define SE_TargetReadingListLink_type 1038
#define SE_SupportedLocaleListLink_type 1640
#define SE_SupplyInterruptionOverrideListLink_type 906
#define SE_SubscriptionListLink_type 1898
#define SE_ServiceSupplierLink_type 1084
#define SE_SelfDeviceLink_type 1955
#define SE_RPLSourceRoutesListLink_type 1495
#define SE_RPLInstanceListLink_type 1601
#define SE_ResponseSetListLink_type 1784
#define SE_ResponseListLink_type 1690
#define SE_RegistrationLink_type 1901
#define SE_ReadingTypeLink_type 988
#define SE_ReadingSetListLink_type 1307
#define SE_ReadingListLink_type 1285
#define SE_ReadingLink_type 1310
#define SE_RateComponentListLink_type 1219
#define SE_RateComponentLink_type 1437
#define SE_ProjectionReadingListLink_type 1041
#define SE_PriceResponseCfgListLink_type 1454
#define SE_PrepayOperationStatusLink_type 909
#define SE_PrepaymentListLink_type 1787
#define SE_PrepaymentLink_type 1044
#define SE_PowerStatusLink_type 1840
#define SE_NotificationListLink_type 454
#define SE_NeighborListLink_type 1531
#define SE_MirrorUsagePointListLink_type 1957
#define SE_MeterReadingListLink_type 893
#define SE_MeterReadingLink_type 457
#define SE_MessagingProgramListLink_type 1790
#define SE_LogEventListLink_type 1842
#define SE_LoadShedAvailabilityListLink_type 1845
#define SE_LLInterfaceListLink_type 1561
#define SE_IPInterfaceListLink_type 1848
#define SE_IPAddrListLink_type 1564
#define SE_HistoricalReadingListLink_type 1046
#define SE_FunctionSetAssignmentsListLink_type 1903
#define SE_FlowReservationResponseListLink_type 1906
#define SE_FlowReservationRequestListLink_type 1909
#define SE_FileStatusLink_type 1851
#define SE_FileListLink_type 1793
#define SE_FileLink_type 1406
#define SE_EndDeviceListLink_type 1960
#define SE_EndDeviceLink_type 459
#define SE_EndDeviceControlListLink_type 1369
#define SE_DeviceStatusLink_type 1853
#define SE_DeviceInformationLink_type 1855
#define SE_DeviceCapabilityLink_type 461
#define SE_DERStatusLink_type 779
#define SE_DERSettingsLink_type 781
#define SE_DERProgramListLink_type 1796
#define SE_DERProgramLink_type 463
#define SE_DERListLink_type 1857
#define SE_DERLink_type 465
#define SE_DERCurveListLink_type 515
#define SE_DERCurveLink_type 588
#define SE_DERControlListLink_type 518
#define SE_DERCapabilityLink_type 783
#define SE_DefaultDERControlLink_type 521
#define SE_DERAvailabilityLink_type 785
#define SE_DemandResponseProgramListLink_type 1799
#define SE_DemandResponseProgramLink_type 1392
#define SE_CustomerAgreementListLink_type 1086
#define SE_CustomerAccountListLink_type 1802
#define SE_CustomerAccountLink_type 467
#define SE_CreditRegisterListLink_type 911
#define SE_ConsumptionTariffIntervalListLink_type 1195
#define SE_ConfigurationLink_type 1860
#define SE_BillingReadingSetListLink_type 990
#define SE_BillingReadingListLink_type 1107
#define SE_BillingPeriodListLink_type 1049
#define SE_AssociatedUsagePointLink_type 789
#define SE_AssociatedDERProgramListLink_type 791
#define SE_ActiveTimeTariffIntervalListLink_type 1243
#define SE_ActiveTextMessageListLink_type 1175
#define SE_ActiveTargetReadingListLink_type 1052
#define SE_ActiveSupplyInterruptionOverrideListLink_type 922
#define SE_ActiveProjectionReadingListLink_type 1055
#define SE_ActiveFlowReservationListLink_type 469
#define SE_ActiveEndDeviceControlListLink_type 1372
#define SE_ActiveDERControlListLink_type 523
#define SE_ActiveCreditRegisterListLink_type 925
#define SE_ActiveBillingPeriodListLink_type 1058
#define SE_AccountBalanceLink_type 928
#define SE_StorageModeStatusType_type 478
#define SE_StateOfChargeStatusType_type 481
#define SE_OperationalModeStatusType_type 484
#define SE_ManufacturerStatusType_type 487
#define SE_LocalControlModeStatusType_type 490
#define SE_InverterStatusType_type 493
#define SE_ConnectStatusType_type 496
#define SE_VoltageRMS_type 698
#define SE_WattHour_type 695
#define SE_FixedVar_type 596
#define SE_PowerFactorWithExcitation_type 599
#define SE_PowerFactor_type 692
#define SE_ReactiveSusceptance_type 689
#define SE_ReactivePower_type 585
#define SE_ApparentPower_type 701
#define SE_AmpereHour_type 704
#define SE_ActivePower_type 582
#define SE_UnsignedFixedPointType_type 472
#define SE_FixedPointType_type 475
#define SE_CurrentRMS_type 707
#define SE_DERUnitRefType_type (XS_UBYTE|ST_SIMPLE)
#define SE_DERStatus_type 502
#define SE_DERProgramList_type 548
#define SE_DERProgram_type 532
#define SE_DERCurveType_type (XS_UBYTE|ST_SIMPLE)
#define SE_CurveData_type 555
#define SE_DERCurveList_type 577
#define SE_CurrentDERProgramLink_type 787
#define SE_DERCurve_type 559
#define SE_DERControlType_type (xs_type(XS_HEX_BINARY,4)|ST_SIMPLE)
#define SE_DERControlList_type 683
#define SE_DERControl_type 668
#define SE_DERControlBase_type 603
#define SE_DERCapability_type 710
#define SE_DERAvailability_type 737
#define SE_DERType_type (XS_UBYTE|ST_SIMPLE)
#define SE_DERSettings_type 747
#define SE_DERList_type 804
#define SE_DER_type 794
#define SE_FreqDroopType_type 590
#define SE_DefaultDERControl_type 810
#define SE_FlowReservationResponseList_type 843
#define SE_FlowReservationResponse_type 829
#define SE_FlowReservationRequestList_type 864
#define SE_FlowReservationRequest_type 853
#define SE_RequestStatus_type 850
#define SE_ServiceStatusType_type (XS_UBYTE|ST_SIMPLE)
#define SE_CreditTypeChange_type 882
#define SE_CreditTypeType_type (XS_UBYTE|ST_SIMPLE)
#define SE_CreditStatusType_type (XS_UBYTE|ST_SIMPLE)
#define SE_SupplyInterruptionOverrideList_type 874
#define SE_SupplyInterruptionOverride_type 870
#define SE_ServiceChange_type 879
#define SE_PrepayOperationStatus_type 885
#define SE_PrepayModeType_type (XS_UBYTE|ST_SIMPLE)
#define SE_PrepaymentList_type 947
#define SE_Prepayment_type 930
#define SE_CreditRegisterList_type 963
#define SE_CreditRegister_type 954
#define SE_AccountingUnit_type 917
#define SE_AccountBalance_type 968
#define SE_ServiceSupplierList_type 983
#define SE_ServiceSupplier_type 974
#define SE_TargetReadingList_type 1007
#define SE_TargetReading_type 1000
#define SE_ProjectionReadingList_type 1019
#define SE_ProjectionReading_type 1012
#define SE_HistoricalReadingList_type 1031
#define SE_HistoricalReading_type 1024
#define SE_CustomerAgreementList_type 1078
#define SE_CustomerAgreement_type 1061
#define SE_CustomerAccountList_type 1100
#define SE_CustomerAccount_type 1089
#define SE_ChargeKind_type (XS_UBYTE|ST_SIMPLE)
#define SE_Charge_type 1123
#define SE_BillingReadingSetList_type 1117
#define SE_BillingReadingSet_type 1110
#define SE_BillingReadingList_type 1135
#define SE_BillingReading_type 1127
#define SE_BillingMeterReadingBase_type 993
#define SE_BillingPeriodList_type 1146
#define SE_BillingPeriod_type 1140
#define SE_TextMessageList_type 1166
#define SE_TextMessage_type 1152
#define SE_PriorityType_type (XS_UBYTE|ST_SIMPLE)
#define SE_MessagingProgramList_type 1188
#define SE_MessagingProgram_type 1178
#define SE_TimeTariffIntervalList_type 1213
#define SE_TimeTariffInterval_type 1198
#define SE_TariffProfileList_type 1233
#define SE_TariffProfile_type 1222
#define SE_RateComponentList_type 1257
#define SE_RateComponent_type 1246
#define SE_EnvironmentalCost_type 1262
#define SE_CostKindType_type (XS_UBYTE|ST_SIMPLE)
#define SE_ConsumptionTariffIntervalList_type 1273
#define SE_ConsumptionTariffInterval_type 1267
#define SE_UsagePointList_type 1278
#define SE_UsagePoint_type 896
#define SE_ReadingType_type 330
#define SE_ReadingSetList_type 1295
#define SE_ReadingSet_type 1288
#define SE_ReadingList_type 1301
#define SE_Reading_type 359
#define SE_MeterReadingList_type 1321
#define SE_MeterReading_type 1312
#define SE_TargetReduction_type 1327
#define SE_SetPoint_type 1330
#define SE_Offset_type 1333
#define SE_LoadShedAvailability_type 1394
#define SE_EndDeviceControlList_type 1363
#define SE_EndDeviceControl_type 1341
#define SE_DutyCycle_type 1337
#define SE_DemandResponseProgramList_type 1385
#define SE_DemandResponseProgram_type 1375
#define SE_ApplianceLoadReduction_type 1339
#define SE_LoadShedAvailabilityList_type 1400
#define SE_FileStatus_type 1408
#define SE_FileList_type 1431
#define SE_File_type 1419
#define SE_TimeConfiguration_type 1449
#define SE_PriceResponseCfgList_type 1444
#define SE_PriceResponseCfg_type 1439
#define SE_PowerConfiguration_type 1457
#define SE_Configuration_type 1460
#define SE_LogEventList_type 1479
#define SE_LogEvent_type 1469
#define SE_RPLSourceRoutesList_type 1490
#define SE_RPLSourceRoutes_type 1486
#define SE_RPLInstanceList_type 1510
#define SE_RPLInstance_type 1498
#define SE_NeighborList_type 1520
#define SE_Neighbor_type 1515
#define SE_loWPAN_type 1525
#define SE_LLInterfaceList_type 1556
#define SE_LLInterface_type 1538
#define SE_IPInterfaceList_type 1595
#define SE_IPInterface_type 1567
#define SE_IPAddrList_type 1608
#define SE_IPAddr_type 1604
#define SE_IEEE_802_15_4_type 1534
#define SE_PEVInfo_type 1613
#define SE_PowerSourceType_type (XS_UBYTE|ST_SIMPLE)
#define SE_PowerStatus_type 1621
#define SE_SupportedLocaleList_type 1635
#define SE_SupportedLocale_type 1632
#define SE_DRLCCapabilities_type 1646
#define SE_DeviceInformation_type 1650
#define SE_Time_type 1668
#define SE_TextResponse_type 1684
#define SE_ResponseSetList_type 1699
#define SE_ResponseSet_type 1693
#define SE_ResponseList_type 1705
#define SE_Response_type 1678
#define SE_PriceResponse_type 1710
#define SE_DrResponse_type 1719
#define SE_AppliedTargetReduction_type 1716
#define SE_FlowReservationResponseResponse_type 1731
#define SE_DERControlResponse_type 1737
#define SE_NotificationList_type 1753
#define SE_Notification_type 1746
#define SE_SubscriptionList_type 1770
#define SE_Subscription_type 1762
#define SE_SubscriptionBase_type 1743
#define SE_Condition_type 1758
#define SE_FunctionSetAssignmentsList_type 1833
#define SE_FunctionSetAssignments_type 1817
#define SE_FunctionSetAssignmentsBase_type 1805
#define SE_Temperature_type 1942
#define SE_SelfDevice_type 1877
#define SE_Registration_type 1893
#define SE_EndDeviceList_type 1935
#define SE_EndDevice_type 1912
#define SE_DeviceStatus_type 1946
#define SE_AbstractDevice_type 1862
#define SE_DeviceCapability_type 1963

